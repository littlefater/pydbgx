// File generated by h2idl.py

import "oaidl.idl";
import "ocidl.idl";
import "D:\Workspace\GitHub\pydbgx\helper\miss.h";

[
    uuid(95F974F5-B0AE-44A4-8EB9-FEC4E8136416),
    helpstring("DbgEng Type Library")
]

library DbgEng {

    importlib("stdole32.tlb");
    importlib("stdole2.tlb");

    interface IDebugAdvanced;
    interface IDebugAdvanced2;
    interface IDebugAdvanced3;
    interface IDebugBreakpoint;
    interface IDebugBreakpoint2;
    interface IDebugBreakpoint3;
    interface IDebugClient;
    interface IDebugClient2;
    interface IDebugClient3;
    interface IDebugClient4;
    interface IDebugClient5;
    interface IDebugClient6;
    interface IDebugClient7;
    interface IDebugControl;
    interface IDebugControl2;
    interface IDebugControl3;
    interface IDebugControl4;
    interface IDebugControl5;
    interface IDebugControl6;
    interface IDebugControl7;
    interface IDebugDataSpaces;
    interface IDebugDataSpaces2;
    interface IDebugDataSpaces3;
    interface IDebugDataSpaces4;
    interface IDebugEventCallbacks;
    interface IDebugEventCallbacksWide;
    interface IDebugEventContextCallbacks;
    interface IDebugInputCallbacks;
    interface IDebugOutputCallbacks;
    interface IDebugOutputCallbacksWide;
    interface IDebugOutputCallbacks2;
    interface IDebugRegisters;
    interface IDebugRegisters2;
    interface IDebugSymbolGroup;
    interface IDebugSymbolGroup2;
    interface IDebugSymbols;
    interface IDebugSymbols2;
    interface IDebugSymbols3;
    interface IDebugSymbols4;
    interface IDebugSymbols5;
    interface IDebugSystemObjects;
    interface IDebugSystemObjects2;
    interface IDebugSystemObjects3;
    interface IDebugSystemObjects4;
    
    typedef IDebugAdvanced* PDEBUG_ADVANCED;
    typedef IDebugAdvanced2* PDEBUG_ADVANCED2;
    typedef IDebugAdvanced3* PDEBUG_ADVANCED3;
    typedef IDebugBreakpoint* PDEBUG_BREAKPOINT;
    typedef IDebugBreakpoint2* PDEBUG_BREAKPOINT2;
    typedef IDebugBreakpoint3* PDEBUG_BREAKPOINT3;
    typedef IDebugClient* PDEBUG_CLIENT;
    typedef IDebugClient2* PDEBUG_CLIENT2;
    typedef IDebugClient3* PDEBUG_CLIENT3;
    typedef IDebugClient4* PDEBUG_CLIENT4;
    typedef IDebugClient5* PDEBUG_CLIENT5;
    typedef IDebugClient6* PDEBUG_CLIENT6;
    typedef IDebugClient7* PDEBUG_CLIENT7;
    typedef IDebugControl* PDEBUG_CONTROL;
    typedef IDebugControl2* PDEBUG_CONTROL2;
    typedef IDebugControl3* PDEBUG_CONTROL3;
    typedef IDebugControl4* PDEBUG_CONTROL4;
    typedef IDebugControl5* PDEBUG_CONTROL5;
    typedef IDebugControl6* PDEBUG_CONTROL6;
    typedef IDebugControl7* PDEBUG_CONTROL7;
    typedef IDebugDataSpaces* PDEBUG_DATA_SPACES;
    typedef IDebugDataSpaces2* PDEBUG_DATA_SPACES2;
    typedef IDebugDataSpaces3* PDEBUG_DATA_SPACES3;
    typedef IDebugDataSpaces4* PDEBUG_DATA_SPACES4;
    typedef IDebugEventCallbacks* PDEBUG_EVENT_CALLBACKS;
    typedef IDebugEventCallbacksWide* PDEBUG_EVENT_CALLBACKS_WIDE;
    typedef IDebugEventContextCallbacks* PDEBUG_EVENT_CONTEXT_CALLBACKS;
    typedef IDebugInputCallbacks* PDEBUG_INPUT_CALLBACKS;
    typedef IDebugOutputCallbacks* PDEBUG_OUTPUT_CALLBACKS;
    typedef IDebugOutputCallbacksWide* PDEBUG_OUTPUT_CALLBACKS_WIDE;
    typedef IDebugOutputCallbacks2* PDEBUG_OUTPUT_CALLBACKS2;
    typedef IDebugRegisters* PDEBUG_REGISTERS;
    typedef IDebugRegisters2* PDEBUG_REGISTERS2;
    typedef IDebugSymbolGroup* PDEBUG_SYMBOL_GROUP;
    typedef IDebugSymbolGroup2* PDEBUG_SYMBOL_GROUP2;
    typedef IDebugSymbols* PDEBUG_SYMBOLS;
    typedef IDebugSymbols2* PDEBUG_SYMBOLS2;
    typedef IDebugSymbols3* PDEBUG_SYMBOLS3;
    typedef IDebugSymbols4* PDEBUG_SYMBOLS4;
    typedef IDebugSymbols5* PDEBUG_SYMBOLS5;
    typedef IDebugSystemObjects* PDEBUG_SYSTEM_OBJECTS;
    typedef IDebugSystemObjects2* PDEBUG_SYSTEM_OBJECTS2;
    typedef IDebugSystemObjects3* PDEBUG_SYSTEM_OBJECTS3;
    typedef IDebugSystemObjects4* PDEBUG_SYSTEM_OBJECTS4;
    
    //----------------------------------------------------------------------
    //
    // IDebugAdvanced
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(f2df5f53-071f-47bd-9de6-5734c3fed689),
        helpstring("IDebugAdvanced")
    ]

    interface IDebugAdvanced : IUnknown {

        HRESULT GetThreadContext (
            [out]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT SetThreadContext (
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugAdvanced2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(716d14c9-119b-4ba5-af1f-0890e672416a),
        helpstring("IDebugAdvanced2")
    ]

    interface IDebugAdvanced2 : IUnknown {

        HRESULT GetThreadContext (
            [out]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT SetThreadContext (
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT Request (
            [in]  unsigned long  Request,
            [in]  void*  InBuffer,
            [in]  unsigned long  InBufferSize,
            [out]  void*  OutBuffer,
            [in]  unsigned long  OutBufferSize,
            [out]  unsigned long*  OutSize
        );

        HRESULT GetSourceFileInformation (
            [in]  unsigned long  Which,
            [in]  char*  SourceFile,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize
        );

        HRESULT FindSourceFileAndToken (
            [in]  unsigned long  StartElement,
            [in]  unsigned __int64  ModAddr,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [in]  void*  FileToken,
            [in]  unsigned long  FileTokenSize,
            [out]  unsigned long*  FoundElement,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSymbolInformation (
            [in]  unsigned long  Which,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize,
            [out]  char*  StringBuffer,
            [in]  unsigned long  StringBufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSystemObjectInformation (
            [in]  unsigned long  Which,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugAdvanced3
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(cba4abb4-84c4-444d-87ca-a04e13286739),
        helpstring("IDebugAdvanced3")
    ]

    interface IDebugAdvanced3 : IUnknown {

        HRESULT GetThreadContext (
            [out]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT SetThreadContext (
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT Request (
            [in]  unsigned long  Request,
            [in]  void*  InBuffer,
            [in]  unsigned long  InBufferSize,
            [out]  void*  OutBuffer,
            [in]  unsigned long  OutBufferSize,
            [out]  unsigned long*  OutSize
        );

        HRESULT GetSourceFileInformation (
            [in]  unsigned long  Which,
            [in]  char*  SourceFile,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize
        );

        HRESULT FindSourceFileAndToken (
            [in]  unsigned long  StartElement,
            [in]  unsigned __int64  ModAddr,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [in]  void*  FileToken,
            [in]  unsigned long  FileTokenSize,
            [out]  unsigned long*  FoundElement,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSymbolInformation (
            [in]  unsigned long  Which,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize,
            [out]  char*  StringBuffer,
            [in]  unsigned long  StringBufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSystemObjectInformation (
            [in]  unsigned long  Which,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize
        );

        HRESULT GetSourceFileInformationWide (
            [in]  unsigned long  Which,
            [in]  wchar_t*  SourceFile,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize
        );

        HRESULT FindSourceFileAndTokenWide (
            [in]  unsigned long  StartElement,
            [in]  unsigned __int64  ModAddr,
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags,
            [in]  void*  FileToken,
            [in]  unsigned long  FileTokenSize,
            [out]  unsigned long*  FoundElement,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSymbolInformationWide (
            [in]  unsigned long  Which,
            [in]  unsigned __int64  Arg64,
            [in]  unsigned long  Arg32,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize,
            [out]  wchar_t*  StringBuffer,
            [in]  unsigned long  StringBufferSize,
            [out]  unsigned long*  StringSize
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugBreakpoint
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(5bd9d474-5975-423a-b88b-65a8e7110e65),
        helpstring("IDebugBreakpoint")
    ]

    interface IDebugBreakpoint : IUnknown {

        HRESULT GetId (
            [out]  unsigned long*  Id
        );

        HRESULT GetType (
            [out]  unsigned long*  BreakType,
            [out]  unsigned long*  ProcType
        );

        HRESULT GetAdder (
            [out]  PDEBUG_CLIENT*  Adder
        );

        HRESULT GetFlags (
            [out]  unsigned long*  Flags
        );

        HRESULT AddFlags (
            [in]  unsigned long  Flags
        );

        HRESULT RemoveFlags (
            [in]  unsigned long  Flags
        );

        HRESULT SetFlags (
            [in]  unsigned long  Flags
        );

        HRESULT GetOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetDataParameters (
            [out]  unsigned long*  Size,
            [out]  unsigned long*  AccessType
        );

        HRESULT SetDataParameters (
            [in]  unsigned long  Size,
            [in]  unsigned long  AccessType
        );

        HRESULT GetPassCount (
            [out]  unsigned long*  Count
        );

        HRESULT SetPassCount (
            [in]  unsigned long  Count
        );

        HRESULT GetCurrentPassCount (
            [out]  unsigned long*  Count
        );

        HRESULT GetMatchThreadId (
            [out]  unsigned long*  Id
        );

        HRESULT SetMatchThreadId (
            [in]  unsigned long  Thread
        );

        HRESULT GetCommand (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetCommand (
            [in]  const char*  Command
        );

        HRESULT GetOffsetExpression (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExpressionSize
        );

        HRESULT SetOffsetExpression (
            [in]  const char*  Expression
        );

        HRESULT GetParameters (
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugBreakpoint2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(1b278d20-79f2-426e-a3f9-c1ddf375d48e),
        helpstring("IDebugBreakpoint2")
    ]

    interface IDebugBreakpoint2 : IUnknown {

        HRESULT GetId (
            [out]  unsigned long*  Id
        );

        HRESULT GetType (
            [out]  unsigned long*  BreakType,
            [out]  unsigned long*  ProcType
        );

        HRESULT GetAdder (
            [out]  PDEBUG_CLIENT*  Adder
        );

        HRESULT GetFlags (
            [out]  unsigned long*  Flags
        );

        HRESULT AddFlags (
            [in]  unsigned long  Flags
        );

        HRESULT RemoveFlags (
            [in]  unsigned long  Flags
        );

        HRESULT SetFlags (
            [in]  unsigned long  Flags
        );

        HRESULT GetOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetDataParameters (
            [out]  unsigned long*  Size,
            [out]  unsigned long*  AccessType
        );

        HRESULT SetDataParameters (
            [in]  unsigned long  Size,
            [in]  unsigned long  AccessType
        );

        HRESULT GetPassCount (
            [out]  unsigned long*  Count
        );

        HRESULT SetPassCount (
            [in]  unsigned long  Count
        );

        HRESULT GetCurrentPassCount (
            [out]  unsigned long*  Count
        );

        HRESULT GetMatchThreadId (
            [out]  unsigned long*  Id
        );

        HRESULT SetMatchThreadId (
            [in]  unsigned long  Thread
        );

        HRESULT GetCommand (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetCommand (
            [in]  const char*  Command
        );

        HRESULT GetOffsetExpression (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExpressionSize
        );

        HRESULT SetOffsetExpression (
            [in]  const char*  Expression
        );

        HRESULT GetParameters (
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT GetCommandWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetCommandWide (
            [in]  const wchar_t*  Command
        );

        HRESULT GetOffsetExpressionWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExpressionSize
        );

        HRESULT SetOffsetExpressionWide (
            [in]  const wchar_t*  Expression
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugBreakpoint3
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(38f5c249-b448-43bb-9835-579d4ec02249),
        helpstring("IDebugBreakpoint3")
    ]

    interface IDebugBreakpoint3 : IUnknown {

        HRESULT GetId (
            [out]  unsigned long*  Id
        );

        HRESULT GetType (
            [out]  unsigned long*  BreakType,
            [out]  unsigned long*  ProcType
        );

        HRESULT GetAdder (
            [out]  PDEBUG_CLIENT*  Adder
        );

        HRESULT GetFlags (
            [out]  unsigned long*  Flags
        );

        HRESULT AddFlags (
            [in]  unsigned long  Flags
        );

        HRESULT RemoveFlags (
            [in]  unsigned long  Flags
        );

        HRESULT SetFlags (
            [in]  unsigned long  Flags
        );

        HRESULT GetOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetDataParameters (
            [out]  unsigned long*  Size,
            [out]  unsigned long*  AccessType
        );

        HRESULT SetDataParameters (
            [in]  unsigned long  Size,
            [in]  unsigned long  AccessType
        );

        HRESULT GetPassCount (
            [out]  unsigned long*  Count
        );

        HRESULT SetPassCount (
            [in]  unsigned long  Count
        );

        HRESULT GetCurrentPassCount (
            [out]  unsigned long*  Count
        );

        HRESULT GetMatchThreadId (
            [out]  unsigned long*  Id
        );

        HRESULT SetMatchThreadId (
            [in]  unsigned long  Thread
        );

        HRESULT GetCommand (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetCommand (
            [in]  const char*  Command
        );

        HRESULT GetOffsetExpression (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExpressionSize
        );

        HRESULT SetOffsetExpression (
            [in]  const char*  Expression
        );

        HRESULT GetParameters (
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT GetCommandWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetCommandWide (
            [in]  const wchar_t*  Command
        );

        HRESULT GetOffsetExpressionWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExpressionSize
        );

        HRESULT SetOffsetExpressionWide (
            [in]  const wchar_t*  Expression
        );

        HRESULT GetGuid (
            [out]  LPGUID  Guid
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugClient
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(27fe5639-8407-4f47-8364-ee118fb08ac8),
        helpstring("IDebugClient")
    ]

    interface IDebugClient : IUnknown {

        HRESULT AttachKernel (
            [in]  unsigned long  Flags,
            [in]  const char*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptions (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptions (
            [in]  const char*  Options
        );

        HRESULT StartProcessServer (
            [in]  unsigned long  Flags,
            [in]  const char*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServer (
            [in]  const char*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT DisconnectProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT GetRunningProcessSystemIds (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Ids,
            [in]  unsigned long  Count,
            [out]  unsigned long*  ActualCount
        );

        HRESULT GetRunningProcessSystemIdByExecutableName (
            [in]  unsigned __int64  Server,
            [in]  const char*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescription (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  char*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT AttachProcess (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttach (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT GetProcessOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT OpenDumpFile (
            [in]  const char*  DumpFile
        );

        HRESULT WriteDumpFile (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier
        );

        HRESULT ConnectSession (
            [in]  unsigned long  Flags,
            [in]  unsigned long  HistoryLimit
        );

        HRESULT StartServer (
            [in]  const char*  Options
        );

        HRESULT OutputServers (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT TerminateProcesses();

        HRESULT DetachProcesses();

        HRESULT EndSession (
            [in]  unsigned long  Flags
        );

        HRESULT GetExitCode (
            [out]  unsigned long*  Code
        );

        HRESULT DispatchCallbacks (
            [in]  unsigned long  Timeout
        );

        HRESULT ExitDispatch (
            [in]  PDEBUG_CLIENT  Client
        );

        HRESULT CreateClient (
            [out]  PDEBUG_CLIENT*  Client
        );

        HRESULT GetInputCallbacks (
            [out]  PDEBUG_INPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetInputCallbacks (
            [in]  PDEBUG_INPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputCallbacks (
            [out]  PDEBUG_OUTPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetOutputCallbacks (
            [in]  PDEBUG_OUTPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetOutputMask (
            [in]  unsigned long  Mask
        );

        HRESULT GetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [out]  unsigned long*  Mask
        );

        HRESULT SetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [in]  unsigned long  Mask
        );

        HRESULT GetOutputWidth (
            [out]  unsigned long*  Columns
        );

        HRESULT SetOutputWidth (
            [in]  unsigned long  Columns
        );

        HRESULT GetOutputLinePrefix (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefix (
            [in]  const char*  Prefix
        );

        HRESULT GetIdentity (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentity (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const char*  Format
        );

        HRESULT GetEventCallbacks (
            [out]  PDEBUG_EVENT_CALLBACKS*  Callbacks
        );

        HRESULT SetEventCallbacks (
            [in]  PDEBUG_EVENT_CALLBACKS  Callbacks
        );

        HRESULT FlushCallbacks();

    };

    //----------------------------------------------------------------------
    //
    // IDebugClient2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(edbed635-372e-4dab-bbfe-ed0d2f63be81),
        helpstring("IDebugClient2")
    ]

    interface IDebugClient2 : IUnknown {

        HRESULT AttachKernel (
            [in]  unsigned long  Flags,
            [in]  const char*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptions (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptions (
            [in]  const char*  Options
        );

        HRESULT StartProcessServer (
            [in]  unsigned long  Flags,
            [in]  const char*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServer (
            [in]  const char*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT DisconnectProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT GetRunningProcessSystemIds (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Ids,
            [in]  unsigned long  Count,
            [out]  unsigned long*  ActualCount
        );

        HRESULT GetRunningProcessSystemIdByExecutableName (
            [in]  unsigned __int64  Server,
            [in]  const char*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescription (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  char*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT AttachProcess (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttach (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT GetProcessOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT OpenDumpFile (
            [in]  const char*  DumpFile
        );

        HRESULT WriteDumpFile (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier
        );

        HRESULT ConnectSession (
            [in]  unsigned long  Flags,
            [in]  unsigned long  HistoryLimit
        );

        HRESULT StartServer (
            [in]  const char*  Options
        );

        HRESULT OutputServers (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT TerminateProcesses();

        HRESULT DetachProcesses();

        HRESULT EndSession (
            [in]  unsigned long  Flags
        );

        HRESULT GetExitCode (
            [out]  unsigned long*  Code
        );

        HRESULT DispatchCallbacks (
            [in]  unsigned long  Timeout
        );

        HRESULT ExitDispatch (
            [in]  PDEBUG_CLIENT  Client
        );

        HRESULT CreateClient (
            [out]  PDEBUG_CLIENT*  Client
        );

        HRESULT GetInputCallbacks (
            [out]  PDEBUG_INPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetInputCallbacks (
            [in]  PDEBUG_INPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputCallbacks (
            [out]  PDEBUG_OUTPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetOutputCallbacks (
            [in]  PDEBUG_OUTPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetOutputMask (
            [in]  unsigned long  Mask
        );

        HRESULT GetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [out]  unsigned long*  Mask
        );

        HRESULT SetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [in]  unsigned long  Mask
        );

        HRESULT GetOutputWidth (
            [out]  unsigned long*  Columns
        );

        HRESULT SetOutputWidth (
            [in]  unsigned long  Columns
        );

        HRESULT GetOutputLinePrefix (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefix (
            [in]  const char*  Prefix
        );

        HRESULT GetIdentity (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentity (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const char*  Format
        );

        HRESULT GetEventCallbacks (
            [out]  PDEBUG_EVENT_CALLBACKS*  Callbacks
        );

        HRESULT SetEventCallbacks (
            [in]  PDEBUG_EVENT_CALLBACKS  Callbacks
        );

        HRESULT FlushCallbacks();

        HRESULT WriteDumpFile2 (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const char*  Comment
        );

        HRESULT AddDumpInformationFile (
            [in]  const char*  InfoFile,
            [in]  unsigned long  Type
        );

        HRESULT EndProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT WaitForProcessServerEnd (
            [in]  unsigned long  Timeout
        );

        HRESULT IsKernelDebuggerEnabled();

        HRESULT TerminateCurrentProcess();

        HRESULT DetachCurrentProcess();

        HRESULT AbandonCurrentProcess();

    };

    //----------------------------------------------------------------------
    //
    // IDebugClient3
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(dd492d7f-71b8-4ad6-a8dc-1c887479ff91),
        helpstring("IDebugClient3")
    ]

    interface IDebugClient3 : IUnknown {

        HRESULT AttachKernel (
            [in]  unsigned long  Flags,
            [in]  const char*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptions (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptions (
            [in]  const char*  Options
        );

        HRESULT StartProcessServer (
            [in]  unsigned long  Flags,
            [in]  const char*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServer (
            [in]  const char*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT DisconnectProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT GetRunningProcessSystemIds (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Ids,
            [in]  unsigned long  Count,
            [out]  unsigned long*  ActualCount
        );

        HRESULT GetRunningProcessSystemIdByExecutableName (
            [in]  unsigned __int64  Server,
            [in]  const char*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescription (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  char*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT AttachProcess (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttach (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT GetProcessOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT OpenDumpFile (
            [in]  const char*  DumpFile
        );

        HRESULT WriteDumpFile (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier
        );

        HRESULT ConnectSession (
            [in]  unsigned long  Flags,
            [in]  unsigned long  HistoryLimit
        );

        HRESULT StartServer (
            [in]  const char*  Options
        );

        HRESULT OutputServers (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT TerminateProcesses();

        HRESULT DetachProcesses();

        HRESULT EndSession (
            [in]  unsigned long  Flags
        );

        HRESULT GetExitCode (
            [out]  unsigned long*  Code
        );

        HRESULT DispatchCallbacks (
            [in]  unsigned long  Timeout
        );

        HRESULT ExitDispatch (
            [in]  PDEBUG_CLIENT  Client
        );

        HRESULT CreateClient (
            [out]  PDEBUG_CLIENT*  Client
        );

        HRESULT GetInputCallbacks (
            [out]  PDEBUG_INPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetInputCallbacks (
            [in]  PDEBUG_INPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputCallbacks (
            [out]  PDEBUG_OUTPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetOutputCallbacks (
            [in]  PDEBUG_OUTPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetOutputMask (
            [in]  unsigned long  Mask
        );

        HRESULT GetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [out]  unsigned long*  Mask
        );

        HRESULT SetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [in]  unsigned long  Mask
        );

        HRESULT GetOutputWidth (
            [out]  unsigned long*  Columns
        );

        HRESULT SetOutputWidth (
            [in]  unsigned long  Columns
        );

        HRESULT GetOutputLinePrefix (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefix (
            [in]  const char*  Prefix
        );

        HRESULT GetIdentity (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentity (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const char*  Format
        );

        HRESULT GetEventCallbacks (
            [out]  PDEBUG_EVENT_CALLBACKS*  Callbacks
        );

        HRESULT SetEventCallbacks (
            [in]  PDEBUG_EVENT_CALLBACKS  Callbacks
        );

        HRESULT FlushCallbacks();

        HRESULT WriteDumpFile2 (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const char*  Comment
        );

        HRESULT AddDumpInformationFile (
            [in]  const char*  InfoFile,
            [in]  unsigned long  Type
        );

        HRESULT EndProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT WaitForProcessServerEnd (
            [in]  unsigned long  Timeout
        );

        HRESULT IsKernelDebuggerEnabled();

        HRESULT TerminateCurrentProcess();

        HRESULT DetachCurrentProcess();

        HRESULT AbandonCurrentProcess();

        HRESULT GetRunningProcessSystemIdByExecutableNameWide (
            [in]  unsigned __int64  Server,
            [in]  const wchar_t*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescriptionWide (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT CreateProcessWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttachWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugClient4
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(ca83c3de-5089-4cf8-93c8-d892387f2a5e),
        helpstring("IDebugClient4")
    ]

    interface IDebugClient4 : IUnknown {

        HRESULT AttachKernel (
            [in]  unsigned long  Flags,
            [in]  const char*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptions (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptions (
            [in]  const char*  Options
        );

        HRESULT StartProcessServer (
            [in]  unsigned long  Flags,
            [in]  const char*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServer (
            [in]  const char*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT DisconnectProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT GetRunningProcessSystemIds (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Ids,
            [in]  unsigned long  Count,
            [out]  unsigned long*  ActualCount
        );

        HRESULT GetRunningProcessSystemIdByExecutableName (
            [in]  unsigned __int64  Server,
            [in]  const char*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescription (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  char*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT AttachProcess (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttach (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT GetProcessOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT OpenDumpFile (
            [in]  const char*  DumpFile
        );

        HRESULT WriteDumpFile (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier
        );

        HRESULT ConnectSession (
            [in]  unsigned long  Flags,
            [in]  unsigned long  HistoryLimit
        );

        HRESULT StartServer (
            [in]  const char*  Options
        );

        HRESULT OutputServers (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT TerminateProcesses();

        HRESULT DetachProcesses();

        HRESULT EndSession (
            [in]  unsigned long  Flags
        );

        HRESULT GetExitCode (
            [out]  unsigned long*  Code
        );

        HRESULT DispatchCallbacks (
            [in]  unsigned long  Timeout
        );

        HRESULT ExitDispatch (
            [in]  PDEBUG_CLIENT  Client
        );

        HRESULT CreateClient (
            [out]  PDEBUG_CLIENT*  Client
        );

        HRESULT GetInputCallbacks (
            [out]  PDEBUG_INPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetInputCallbacks (
            [in]  PDEBUG_INPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputCallbacks (
            [out]  PDEBUG_OUTPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetOutputCallbacks (
            [in]  PDEBUG_OUTPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetOutputMask (
            [in]  unsigned long  Mask
        );

        HRESULT GetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [out]  unsigned long*  Mask
        );

        HRESULT SetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [in]  unsigned long  Mask
        );

        HRESULT GetOutputWidth (
            [out]  unsigned long*  Columns
        );

        HRESULT SetOutputWidth (
            [in]  unsigned long  Columns
        );

        HRESULT GetOutputLinePrefix (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefix (
            [in]  const char*  Prefix
        );

        HRESULT GetIdentity (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentity (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const char*  Format
        );

        HRESULT GetEventCallbacks (
            [out]  PDEBUG_EVENT_CALLBACKS*  Callbacks
        );

        HRESULT SetEventCallbacks (
            [in]  PDEBUG_EVENT_CALLBACKS  Callbacks
        );

        HRESULT FlushCallbacks();

        HRESULT WriteDumpFile2 (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const char*  Comment
        );

        HRESULT AddDumpInformationFile (
            [in]  const char*  InfoFile,
            [in]  unsigned long  Type
        );

        HRESULT EndProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT WaitForProcessServerEnd (
            [in]  unsigned long  Timeout
        );

        HRESULT IsKernelDebuggerEnabled();

        HRESULT TerminateCurrentProcess();

        HRESULT DetachCurrentProcess();

        HRESULT AbandonCurrentProcess();

        HRESULT GetRunningProcessSystemIdByExecutableNameWide (
            [in]  unsigned __int64  Server,
            [in]  const wchar_t*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescriptionWide (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT CreateProcessWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttachWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT OpenDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle
        );

        HRESULT WriteDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const wchar_t*  Comment
        );

        HRESULT AddDumpInformationFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Type
        );

        HRESULT GetNumberDumpFiles (
            [out]  unsigned long*  Number
        );

        HRESULT GetDumpFile (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

        HRESULT GetDumpFileWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugClient5
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(e3acb9d7-7ec2-4f0c-a0da-e81e0cbbe628),
        helpstring("IDebugClient5")
    ]

    interface IDebugClient5 : IUnknown {

        HRESULT AttachKernel (
            [in]  unsigned long  Flags,
            [in]  const char*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptions (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptions (
            [in]  const char*  Options
        );

        HRESULT StartProcessServer (
            [in]  unsigned long  Flags,
            [in]  const char*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServer (
            [in]  const char*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT DisconnectProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT GetRunningProcessSystemIds (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Ids,
            [in]  unsigned long  Count,
            [out]  unsigned long*  ActualCount
        );

        HRESULT GetRunningProcessSystemIdByExecutableName (
            [in]  unsigned __int64  Server,
            [in]  const char*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescription (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  char*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT AttachProcess (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttach (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT GetProcessOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT OpenDumpFile (
            [in]  const char*  DumpFile
        );

        HRESULT WriteDumpFile (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier
        );

        HRESULT ConnectSession (
            [in]  unsigned long  Flags,
            [in]  unsigned long  HistoryLimit
        );

        HRESULT StartServer (
            [in]  const char*  Options
        );

        HRESULT OutputServers (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT TerminateProcesses();

        HRESULT DetachProcesses();

        HRESULT EndSession (
            [in]  unsigned long  Flags
        );

        HRESULT GetExitCode (
            [out]  unsigned long*  Code
        );

        HRESULT DispatchCallbacks (
            [in]  unsigned long  Timeout
        );

        HRESULT ExitDispatch (
            [in]  PDEBUG_CLIENT  Client
        );

        HRESULT CreateClient (
            [out]  PDEBUG_CLIENT*  Client
        );

        HRESULT GetInputCallbacks (
            [out]  PDEBUG_INPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetInputCallbacks (
            [in]  PDEBUG_INPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputCallbacks (
            [out]  PDEBUG_OUTPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetOutputCallbacks (
            [in]  PDEBUG_OUTPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetOutputMask (
            [in]  unsigned long  Mask
        );

        HRESULT GetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [out]  unsigned long*  Mask
        );

        HRESULT SetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [in]  unsigned long  Mask
        );

        HRESULT GetOutputWidth (
            [out]  unsigned long*  Columns
        );

        HRESULT SetOutputWidth (
            [in]  unsigned long  Columns
        );

        HRESULT GetOutputLinePrefix (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefix (
            [in]  const char*  Prefix
        );

        HRESULT GetIdentity (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentity (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const char*  Format
        );

        HRESULT GetEventCallbacks (
            [out]  PDEBUG_EVENT_CALLBACKS*  Callbacks
        );

        HRESULT SetEventCallbacks (
            [in]  PDEBUG_EVENT_CALLBACKS  Callbacks
        );

        HRESULT FlushCallbacks();

        HRESULT WriteDumpFile2 (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const char*  Comment
        );

        HRESULT AddDumpInformationFile (
            [in]  const char*  InfoFile,
            [in]  unsigned long  Type
        );

        HRESULT EndProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT WaitForProcessServerEnd (
            [in]  unsigned long  Timeout
        );

        HRESULT IsKernelDebuggerEnabled();

        HRESULT TerminateCurrentProcess();

        HRESULT DetachCurrentProcess();

        HRESULT AbandonCurrentProcess();

        HRESULT GetRunningProcessSystemIdByExecutableNameWide (
            [in]  unsigned __int64  Server,
            [in]  const wchar_t*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescriptionWide (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT CreateProcessWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttachWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT OpenDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle
        );

        HRESULT WriteDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const wchar_t*  Comment
        );

        HRESULT AddDumpInformationFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Type
        );

        HRESULT GetNumberDumpFiles (
            [out]  unsigned long*  Number
        );

        HRESULT GetDumpFile (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

        HRESULT GetDumpFileWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

        HRESULT AttachKernelWide (
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptionsWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptionsWide (
            [in]  const wchar_t*  Options
        );

        HRESULT StartProcessServerWide (
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServerWide (
            [in]  const wchar_t*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT StartServerWide (
            [in]  const wchar_t*  Options
        );

        HRESULT OutputServersWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT GetOutputCallbacksWide (
            [out]  PDEBUG_OUTPUT_CALLBACKS_WIDE*  Callbacks
        );

        HRESULT SetOutputCallbacksWide (
            [in]  PDEBUG_OUTPUT_CALLBACKS_WIDE  Callbacks
        );

        HRESULT GetOutputLinePrefixWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefixWide (
            [in]  const wchar_t*  Prefix
        );

        HRESULT GetIdentityWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentityWide (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  Format
        );

        HRESULT GetEventCallbacksWide (
            [out]  PDEBUG_EVENT_CALLBACKS_WIDE*  Callbacks
        );

        HRESULT SetEventCallbacksWide (
            [in]  PDEBUG_EVENT_CALLBACKS_WIDE  Callbacks
        );

        HRESULT CreateProcess2 (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const char*  InitialDirectory,
            [in]  const char*  Environment
        );

        HRESULT CreateProcess2Wide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const wchar_t*  InitialDirectory,
            [in]  const wchar_t*  Environment
        );

        HRESULT CreateProcessAndAttach2 (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const char*  InitialDirectory,
            [in]  const char*  Environment,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcessAndAttach2Wide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const wchar_t*  InitialDirectory,
            [in]  const wchar_t*  Environment,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT PushOutputLinePrefix (
            [in]  const char*  NewPrefix,
            [out]  unsigned __int64*  Handle
        );

        HRESULT PushOutputLinePrefixWide (
            [in]  const wchar_t*  NewPrefix,
            [out]  unsigned __int64*  Handle
        );

        HRESULT PopOutputLinePrefix (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetNumberInputCallbacks (
            [out]  unsigned long*  Count
        );

        HRESULT GetNumberOutputCallbacks (
            [out]  unsigned long*  Count
        );

        HRESULT GetNumberEventCallbacks (
            [in]  unsigned long  EventFlags,
            [out]  unsigned long*  Count
        );

        HRESULT GetQuitLockString (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT SetQuitLockString (
            [in]  const char*  String
        );

        HRESULT GetQuitLockStringWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT SetQuitLockStringWide (
            [in]  const wchar_t*  String
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugClient6
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(fd28b4c5-c498-4686-a28e-62cad2154eb3),
        helpstring("IDebugClient6")
    ]

    interface IDebugClient6 : IUnknown {

        HRESULT AttachKernel (
            [in]  unsigned long  Flags,
            [in]  const char*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptions (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptions (
            [in]  const char*  Options
        );

        HRESULT StartProcessServer (
            [in]  unsigned long  Flags,
            [in]  const char*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServer (
            [in]  const char*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT DisconnectProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT GetRunningProcessSystemIds (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Ids,
            [in]  unsigned long  Count,
            [out]  unsigned long*  ActualCount
        );

        HRESULT GetRunningProcessSystemIdByExecutableName (
            [in]  unsigned __int64  Server,
            [in]  const char*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescription (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  char*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT AttachProcess (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttach (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT GetProcessOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT OpenDumpFile (
            [in]  const char*  DumpFile
        );

        HRESULT WriteDumpFile (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier
        );

        HRESULT ConnectSession (
            [in]  unsigned long  Flags,
            [in]  unsigned long  HistoryLimit
        );

        HRESULT StartServer (
            [in]  const char*  Options
        );

        HRESULT OutputServers (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT TerminateProcesses();

        HRESULT DetachProcesses();

        HRESULT EndSession (
            [in]  unsigned long  Flags
        );

        HRESULT GetExitCode (
            [out]  unsigned long*  Code
        );

        HRESULT DispatchCallbacks (
            [in]  unsigned long  Timeout
        );

        HRESULT ExitDispatch (
            [in]  PDEBUG_CLIENT  Client
        );

        HRESULT CreateClient (
            [out]  PDEBUG_CLIENT*  Client
        );

        HRESULT GetInputCallbacks (
            [out]  PDEBUG_INPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetInputCallbacks (
            [in]  PDEBUG_INPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputCallbacks (
            [out]  PDEBUG_OUTPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetOutputCallbacks (
            [in]  PDEBUG_OUTPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetOutputMask (
            [in]  unsigned long  Mask
        );

        HRESULT GetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [out]  unsigned long*  Mask
        );

        HRESULT SetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [in]  unsigned long  Mask
        );

        HRESULT GetOutputWidth (
            [out]  unsigned long*  Columns
        );

        HRESULT SetOutputWidth (
            [in]  unsigned long  Columns
        );

        HRESULT GetOutputLinePrefix (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefix (
            [in]  const char*  Prefix
        );

        HRESULT GetIdentity (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentity (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const char*  Format
        );

        HRESULT GetEventCallbacks (
            [out]  PDEBUG_EVENT_CALLBACKS*  Callbacks
        );

        HRESULT SetEventCallbacks (
            [in]  PDEBUG_EVENT_CALLBACKS  Callbacks
        );

        HRESULT FlushCallbacks();

        HRESULT WriteDumpFile2 (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const char*  Comment
        );

        HRESULT AddDumpInformationFile (
            [in]  const char*  InfoFile,
            [in]  unsigned long  Type
        );

        HRESULT EndProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT WaitForProcessServerEnd (
            [in]  unsigned long  Timeout
        );

        HRESULT IsKernelDebuggerEnabled();

        HRESULT TerminateCurrentProcess();

        HRESULT DetachCurrentProcess();

        HRESULT AbandonCurrentProcess();

        HRESULT GetRunningProcessSystemIdByExecutableNameWide (
            [in]  unsigned __int64  Server,
            [in]  const wchar_t*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescriptionWide (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT CreateProcessWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttachWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT OpenDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle
        );

        HRESULT WriteDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const wchar_t*  Comment
        );

        HRESULT AddDumpInformationFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Type
        );

        HRESULT GetNumberDumpFiles (
            [out]  unsigned long*  Number
        );

        HRESULT GetDumpFile (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

        HRESULT GetDumpFileWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

        HRESULT AttachKernelWide (
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptionsWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptionsWide (
            [in]  const wchar_t*  Options
        );

        HRESULT StartProcessServerWide (
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServerWide (
            [in]  const wchar_t*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT StartServerWide (
            [in]  const wchar_t*  Options
        );

        HRESULT OutputServersWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT GetOutputCallbacksWide (
            [out]  PDEBUG_OUTPUT_CALLBACKS_WIDE*  Callbacks
        );

        HRESULT SetOutputCallbacksWide (
            [in]  PDEBUG_OUTPUT_CALLBACKS_WIDE  Callbacks
        );

        HRESULT GetOutputLinePrefixWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefixWide (
            [in]  const wchar_t*  Prefix
        );

        HRESULT GetIdentityWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentityWide (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  Format
        );

        HRESULT GetEventCallbacksWide (
            [out]  PDEBUG_EVENT_CALLBACKS_WIDE*  Callbacks
        );

        HRESULT SetEventCallbacksWide (
            [in]  PDEBUG_EVENT_CALLBACKS_WIDE  Callbacks
        );

        HRESULT CreateProcess2 (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const char*  InitialDirectory,
            [in]  const char*  Environment
        );

        HRESULT CreateProcess2Wide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const wchar_t*  InitialDirectory,
            [in]  const wchar_t*  Environment
        );

        HRESULT CreateProcessAndAttach2 (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const char*  InitialDirectory,
            [in]  const char*  Environment,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcessAndAttach2Wide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const wchar_t*  InitialDirectory,
            [in]  const wchar_t*  Environment,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT PushOutputLinePrefix (
            [in]  const char*  NewPrefix,
            [out]  unsigned __int64*  Handle
        );

        HRESULT PushOutputLinePrefixWide (
            [in]  const wchar_t*  NewPrefix,
            [out]  unsigned __int64*  Handle
        );

        HRESULT PopOutputLinePrefix (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetNumberInputCallbacks (
            [out]  unsigned long*  Count
        );

        HRESULT GetNumberOutputCallbacks (
            [out]  unsigned long*  Count
        );

        HRESULT GetNumberEventCallbacks (
            [in]  unsigned long  EventFlags,
            [out]  unsigned long*  Count
        );

        HRESULT GetQuitLockString (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT SetQuitLockString (
            [in]  const char*  String
        );

        HRESULT GetQuitLockStringWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT SetQuitLockStringWide (
            [in]  const wchar_t*  String
        );

        HRESULT SetEventContextCallbacks (
            [in]  PDEBUG_EVENT_CONTEXT_CALLBACKS  Callbacks
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugClient7
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(13586be3-542e-481e-b1f2-8497ba74f9a9),
        helpstring("IDebugClient7")
    ]

    interface IDebugClient7 : IUnknown {

        HRESULT AttachKernel (
            [in]  unsigned long  Flags,
            [in]  const char*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptions (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptions (
            [in]  const char*  Options
        );

        HRESULT StartProcessServer (
            [in]  unsigned long  Flags,
            [in]  const char*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServer (
            [in]  const char*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT DisconnectProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT GetRunningProcessSystemIds (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Ids,
            [in]  unsigned long  Count,
            [out]  unsigned long*  ActualCount
        );

        HRESULT GetRunningProcessSystemIdByExecutableName (
            [in]  unsigned __int64  Server,
            [in]  const char*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescription (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  char*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT AttachProcess (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttach (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT GetProcessOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetProcessOptions (
            [in]  unsigned long  Options
        );

        HRESULT OpenDumpFile (
            [in]  const char*  DumpFile
        );

        HRESULT WriteDumpFile (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier
        );

        HRESULT ConnectSession (
            [in]  unsigned long  Flags,
            [in]  unsigned long  HistoryLimit
        );

        HRESULT StartServer (
            [in]  const char*  Options
        );

        HRESULT OutputServers (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT TerminateProcesses();

        HRESULT DetachProcesses();

        HRESULT EndSession (
            [in]  unsigned long  Flags
        );

        HRESULT GetExitCode (
            [out]  unsigned long*  Code
        );

        HRESULT DispatchCallbacks (
            [in]  unsigned long  Timeout
        );

        HRESULT ExitDispatch (
            [in]  PDEBUG_CLIENT  Client
        );

        HRESULT CreateClient (
            [out]  PDEBUG_CLIENT*  Client
        );

        HRESULT GetInputCallbacks (
            [out]  PDEBUG_INPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetInputCallbacks (
            [in]  PDEBUG_INPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputCallbacks (
            [out]  PDEBUG_OUTPUT_CALLBACKS*  Callbacks
        );

        HRESULT SetOutputCallbacks (
            [in]  PDEBUG_OUTPUT_CALLBACKS  Callbacks
        );

        HRESULT GetOutputMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetOutputMask (
            [in]  unsigned long  Mask
        );

        HRESULT GetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [out]  unsigned long*  Mask
        );

        HRESULT SetOtherOutputMask (
            [in]  PDEBUG_CLIENT  Client,
            [in]  unsigned long  Mask
        );

        HRESULT GetOutputWidth (
            [out]  unsigned long*  Columns
        );

        HRESULT SetOutputWidth (
            [in]  unsigned long  Columns
        );

        HRESULT GetOutputLinePrefix (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefix (
            [in]  const char*  Prefix
        );

        HRESULT GetIdentity (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentity (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const char*  Format
        );

        HRESULT GetEventCallbacks (
            [out]  PDEBUG_EVENT_CALLBACKS*  Callbacks
        );

        HRESULT SetEventCallbacks (
            [in]  PDEBUG_EVENT_CALLBACKS  Callbacks
        );

        HRESULT FlushCallbacks();

        HRESULT WriteDumpFile2 (
            [in]  const char*  DumpFile,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const char*  Comment
        );

        HRESULT AddDumpInformationFile (
            [in]  const char*  InfoFile,
            [in]  unsigned long  Type
        );

        HRESULT EndProcessServer (
            [in]  unsigned __int64  Server
        );

        HRESULT WaitForProcessServerEnd (
            [in]  unsigned long  Timeout
        );

        HRESULT IsKernelDebuggerEnabled();

        HRESULT TerminateCurrentProcess();

        HRESULT DetachCurrentProcess();

        HRESULT AbandonCurrentProcess();

        HRESULT GetRunningProcessSystemIdByExecutableNameWide (
            [in]  unsigned __int64  Server,
            [in]  const wchar_t*  ExeName,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Id
        );

        HRESULT GetRunningProcessDescriptionWide (
            [in]  unsigned __int64  Server,
            [in]  unsigned long  SystemId,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  ExeName,
            [in]  unsigned long  ExeNameSize,
            [out]  unsigned long*  ActualExeNameSize,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  ActualDescriptionSize
        );

        HRESULT CreateProcessWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags
        );

        HRESULT CreateProcessAndAttachWide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  unsigned long  CreateFlags,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT OpenDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle
        );

        HRESULT WriteDumpFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Qualifier,
            [in]  unsigned long  FormatFlags,
            [in]  const wchar_t*  Comment
        );

        HRESULT AddDumpInformationFileWide (
            [in]  const wchar_t*  FileName,
            [in]  unsigned __int64  FileHandle,
            [in]  unsigned long  Type
        );

        HRESULT GetNumberDumpFiles (
            [out]  unsigned long*  Number
        );

        HRESULT GetDumpFile (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

        HRESULT GetDumpFileWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Handle,
            [out]  unsigned long*  Type
        );

        HRESULT AttachKernelWide (
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  ConnectOptions
        );

        HRESULT GetKernelConnectionOptionsWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  OptionsSize
        );

        HRESULT SetKernelConnectionOptionsWide (
            [in]  const wchar_t*  Options
        );

        HRESULT StartProcessServerWide (
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  Options,
            [in]  void*  Reserved
        );

        HRESULT ConnectProcessServerWide (
            [in]  const wchar_t*  RemoteOptions,
            [out]  unsigned __int64*  Server
        );

        HRESULT StartServerWide (
            [in]  const wchar_t*  Options
        );

        HRESULT OutputServersWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Machine,
            [in]  unsigned long  Flags
        );

        HRESULT GetOutputCallbacksWide (
            [out]  PDEBUG_OUTPUT_CALLBACKS_WIDE*  Callbacks
        );

        HRESULT SetOutputCallbacksWide (
            [in]  PDEBUG_OUTPUT_CALLBACKS_WIDE  Callbacks
        );

        HRESULT GetOutputLinePrefixWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PrefixSize
        );

        HRESULT SetOutputLinePrefixWide (
            [in]  const wchar_t*  Prefix
        );

        HRESULT GetIdentityWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  IdentitySize
        );

        HRESULT OutputIdentityWide (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  const wchar_t*  Format
        );

        HRESULT GetEventCallbacksWide (
            [out]  PDEBUG_EVENT_CALLBACKS_WIDE*  Callbacks
        );

        HRESULT SetEventCallbacksWide (
            [in]  PDEBUG_EVENT_CALLBACKS_WIDE  Callbacks
        );

        HRESULT CreateProcess2 (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const char*  InitialDirectory,
            [in]  const char*  Environment
        );

        HRESULT CreateProcess2Wide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const wchar_t*  InitialDirectory,
            [in]  const wchar_t*  Environment
        );

        HRESULT CreateProcessAndAttach2 (
            [in]  unsigned __int64  Server,
            [in]  char*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const char*  InitialDirectory,
            [in]  const char*  Environment,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT CreateProcessAndAttach2Wide (
            [in]  unsigned __int64  Server,
            [in]  wchar_t*  CommandLine,
            [in]  void*  OptionsBuffer,
            [in]  unsigned long  OptionsBufferSize,
            [in]  const wchar_t*  InitialDirectory,
            [in]  const wchar_t*  Environment,
            [in]  unsigned long  ProcessId,
            [in]  unsigned long  AttachFlags
        );

        HRESULT PushOutputLinePrefix (
            [in]  const char*  NewPrefix,
            [out]  unsigned __int64*  Handle
        );

        HRESULT PushOutputLinePrefixWide (
            [in]  const wchar_t*  NewPrefix,
            [out]  unsigned __int64*  Handle
        );

        HRESULT PopOutputLinePrefix (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetNumberInputCallbacks (
            [out]  unsigned long*  Count
        );

        HRESULT GetNumberOutputCallbacks (
            [out]  unsigned long*  Count
        );

        HRESULT GetNumberEventCallbacks (
            [in]  unsigned long  EventFlags,
            [out]  unsigned long*  Count
        );

        HRESULT GetQuitLockString (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT SetQuitLockString (
            [in]  const char*  String
        );

        HRESULT GetQuitLockStringWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT SetQuitLockStringWide (
            [in]  const wchar_t*  String
        );

        HRESULT SetEventContextCallbacks (
            [in]  PDEBUG_EVENT_CONTEXT_CALLBACKS  Callbacks
        );

        HRESULT SetClientContext (
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugControl
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(5182e668-105e-416e-ad92-24ef800424ba),
        helpstring("IDebugControl")
    ]

    interface IDebugControl : IUnknown {

        HRESULT GetInterrupt();

        HRESULT SetInterrupt (
            [in]  unsigned long  Flags
        );

        HRESULT GetInterruptTimeout (
            [out]  unsigned long*  Seconds
        );

        HRESULT SetInterruptTimeout (
            [in]  unsigned long  Seconds
        );

        HRESULT GetLogFile (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFile (
            [in]  const char*  File,
            [in]  BOOL  Append
        );

        HRESULT CloseLogFile();

        HRESULT GetLogMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetLogMask (
            [in]  unsigned long  Mask
        );

        HRESULT Input (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInput (
            [in]  const char*  Buffer
        );

        HRESULT OutputVaList (
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaList (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaList (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptText (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT OutputCurrentState (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT OutputVersionInformation (
            [in]  unsigned long  OutputControl
        );

        HRESULT GetNotifyEventHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT SetNotifyEventHandle (
            [in]  unsigned __int64  Handle
        );

        HRESULT Assemble (
            [in]  unsigned __int64  Offset,
            [in]  const char*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT Disassemble (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetDisassembleEffectiveOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputDisassembly (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT OutputDisassemblyLines (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  PreviousLines,
            [in]  unsigned long  TotalLines,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  OffsetLine,
            [out]  unsigned __int64*  StartOffset,
            [out]  unsigned __int64*  EndOffset,
            [out]  unsigned __int64*  LineOffsets
        );

        HRESULT GetNearInstruction (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  unsigned __int64*  NearOffset
        );

        HRESULT GetStackTrace (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT GetReturnOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetDebuggeeType (
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

        HRESULT GetActualProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetExecutingProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetNumberPossibleExecutingProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetPossibleExecutingProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetNumberProcessors (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemVersion (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Major,
            [out]  unsigned long*  Minor,
            [out]  char*  ServicePackString,
            [in]  unsigned long  ServicePackStringSize,
            [out]  unsigned long*  ServicePackStringUsed,
            [out]  unsigned long*  ServicePackNumber,
            [out]  char*  BuildString,
            [in]  unsigned long  BuildStringSize,
            [out]  unsigned long*  BuildStringUsed
        );

        HRESULT GetPageSize (
            [out]  unsigned long*  Size
        );

        HRESULT IsPointer64Bit();

        HRESULT ReadBugCheckData (
            [out]  unsigned long*  Code,
            [out]  unsigned __int64*  Arg1,
            [out]  unsigned __int64*  Arg2,
            [out]  unsigned __int64*  Arg3,
            [out]  unsigned __int64*  Arg4
        );

        HRESULT GetNumberSupportedProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetSupportedProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetProcessorTypeNames (
            [in]  unsigned long  Type,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEffectiveProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT SetEffectiveProcessorType (
            [in]  unsigned long  Type
        );

        HRESULT GetExecutionStatus (
            [out]  unsigned long*  Status
        );

        HRESULT SetExecutionStatus (
            [in]  unsigned long  Status
        );

        HRESULT GetCodeLevel (
            [out]  unsigned long*  Level
        );

        HRESULT SetCodeLevel (
            [in]  unsigned long  Level
        );

        HRESULT GetEngineOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetSystemErrorControl (
            [out]  unsigned long*  OutputLevel,
            [out]  unsigned long*  BreakLevel
        );

        HRESULT SetSystemErrorControl (
            [in]  unsigned long  OutputLevel,
            [in]  unsigned long  BreakLevel
        );

        HRESULT GetTextMacro (
            [in]  unsigned long  Slot,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacro (
            [in]  unsigned long  Slot,
            [in]  const char*  Macro
        );

        HRESULT GetRadix (
            [out]  unsigned long*  Radix
        );

        HRESULT SetRadix (
            [in]  unsigned long  Radix
        );

        HRESULT Evaluate (
            [in]  const char*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT CoerceValue (
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long  OutType,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT CoerceValues (
            [in]  unsigned long  Count,
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long*  OutTypes,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT Execute (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFile (
            [in]  unsigned long  OutputControl,
            [in]  const char*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetNumberBreakpoints (
            [out]  unsigned long*  Number
        );

        HRESULT GetBreakpointByIndex (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointById (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Ids,
            [in]  unsigned long  Start,
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT AddBreakpoint (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT RemoveBreakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT AddExtension (
            [in]  const char*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT RemoveExtension (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetExtensionByPath (
            [in]  const char*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtension (
            [in]  unsigned __int64  Handle,
            [in]  const char*  Function,
            [in]  const char*  Arguments
        );

        HRESULT GetExtensionFunction (
            [in]  unsigned __int64  Handle,
            [in]  const char*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetWindbgExtensionApis32 (
            [in]  PWINDBG_EXTENSION_APIS32  Api
        );

        HRESULT GetWindbgExtensionApis64 (
            [in]  PWINDBG_EXTENSION_APIS64  Api
        );

        HRESULT GetNumberEventFilters (
            [out]  unsigned long*  SpecificEvents,
            [out]  unsigned long*  SpecificExceptions,
            [out]  unsigned long*  ArbitraryExceptions
        );

        HRESULT GetEventFilterText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT GetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT SetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [in]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT GetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [in]  const char*  Argument
        );

        HRESULT GetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Codes,
            [in]  unsigned long  Start,
            [out]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT SetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT GetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT WaitForEvent (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Timeout
        );

        HRESULT GetLastEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugControl2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(d4366723-44df-4bed-8c7e-4c05424f4588),
        helpstring("IDebugControl2")
    ]

    interface IDebugControl2 : IUnknown {

        HRESULT GetInterrupt();

        HRESULT SetInterrupt (
            [in]  unsigned long  Flags
        );

        HRESULT GetInterruptTimeout (
            [out]  unsigned long*  Seconds
        );

        HRESULT SetInterruptTimeout (
            [in]  unsigned long  Seconds
        );

        HRESULT GetLogFile (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFile (
            [in]  const char*  File,
            [in]  BOOL  Append
        );

        HRESULT CloseLogFile();

        HRESULT GetLogMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetLogMask (
            [in]  unsigned long  Mask
        );

        HRESULT Input (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInput (
            [in]  const char*  Buffer
        );

        HRESULT OutputVaList (
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaList (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaList (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptText (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT OutputCurrentState (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT OutputVersionInformation (
            [in]  unsigned long  OutputControl
        );

        HRESULT GetNotifyEventHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT SetNotifyEventHandle (
            [in]  unsigned __int64  Handle
        );

        HRESULT Assemble (
            [in]  unsigned __int64  Offset,
            [in]  const char*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT Disassemble (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetDisassembleEffectiveOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputDisassembly (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT OutputDisassemblyLines (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  PreviousLines,
            [in]  unsigned long  TotalLines,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  OffsetLine,
            [out]  unsigned __int64*  StartOffset,
            [out]  unsigned __int64*  EndOffset,
            [out]  unsigned __int64*  LineOffsets
        );

        HRESULT GetNearInstruction (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  unsigned __int64*  NearOffset
        );

        HRESULT GetStackTrace (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT GetReturnOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetDebuggeeType (
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

        HRESULT GetActualProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetExecutingProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetNumberPossibleExecutingProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetPossibleExecutingProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetNumberProcessors (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemVersion (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Major,
            [out]  unsigned long*  Minor,
            [out]  char*  ServicePackString,
            [in]  unsigned long  ServicePackStringSize,
            [out]  unsigned long*  ServicePackStringUsed,
            [out]  unsigned long*  ServicePackNumber,
            [out]  char*  BuildString,
            [in]  unsigned long  BuildStringSize,
            [out]  unsigned long*  BuildStringUsed
        );

        HRESULT GetPageSize (
            [out]  unsigned long*  Size
        );

        HRESULT IsPointer64Bit();

        HRESULT ReadBugCheckData (
            [out]  unsigned long*  Code,
            [out]  unsigned __int64*  Arg1,
            [out]  unsigned __int64*  Arg2,
            [out]  unsigned __int64*  Arg3,
            [out]  unsigned __int64*  Arg4
        );

        HRESULT GetNumberSupportedProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetSupportedProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetProcessorTypeNames (
            [in]  unsigned long  Type,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEffectiveProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT SetEffectiveProcessorType (
            [in]  unsigned long  Type
        );

        HRESULT GetExecutionStatus (
            [out]  unsigned long*  Status
        );

        HRESULT SetExecutionStatus (
            [in]  unsigned long  Status
        );

        HRESULT GetCodeLevel (
            [out]  unsigned long*  Level
        );

        HRESULT SetCodeLevel (
            [in]  unsigned long  Level
        );

        HRESULT GetEngineOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetSystemErrorControl (
            [out]  unsigned long*  OutputLevel,
            [out]  unsigned long*  BreakLevel
        );

        HRESULT SetSystemErrorControl (
            [in]  unsigned long  OutputLevel,
            [in]  unsigned long  BreakLevel
        );

        HRESULT GetTextMacro (
            [in]  unsigned long  Slot,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacro (
            [in]  unsigned long  Slot,
            [in]  const char*  Macro
        );

        HRESULT GetRadix (
            [out]  unsigned long*  Radix
        );

        HRESULT SetRadix (
            [in]  unsigned long  Radix
        );

        HRESULT Evaluate (
            [in]  const char*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT CoerceValue (
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long  OutType,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT CoerceValues (
            [in]  unsigned long  Count,
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long*  OutTypes,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT Execute (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFile (
            [in]  unsigned long  OutputControl,
            [in]  const char*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetNumberBreakpoints (
            [out]  unsigned long*  Number
        );

        HRESULT GetBreakpointByIndex (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointById (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Ids,
            [in]  unsigned long  Start,
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT AddBreakpoint (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT RemoveBreakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT AddExtension (
            [in]  const char*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT RemoveExtension (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetExtensionByPath (
            [in]  const char*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtension (
            [in]  unsigned __int64  Handle,
            [in]  const char*  Function,
            [in]  const char*  Arguments
        );

        HRESULT GetExtensionFunction (
            [in]  unsigned __int64  Handle,
            [in]  const char*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetWindbgExtensionApis32 (
            [in]  PWINDBG_EXTENSION_APIS32  Api
        );

        HRESULT GetWindbgExtensionApis64 (
            [in]  PWINDBG_EXTENSION_APIS64  Api
        );

        HRESULT GetNumberEventFilters (
            [out]  unsigned long*  SpecificEvents,
            [out]  unsigned long*  SpecificExceptions,
            [out]  unsigned long*  ArbitraryExceptions
        );

        HRESULT GetEventFilterText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT GetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT SetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [in]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT GetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [in]  const char*  Argument
        );

        HRESULT GetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Codes,
            [in]  unsigned long  Start,
            [out]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT SetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT GetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT WaitForEvent (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Timeout
        );

        HRESULT GetLastEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetCurrentTimeDate (
            [out]  unsigned long*  TimeDate
        );

        HRESULT GetCurrentSystemUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetDumpFormatFlags (
            [out]  unsigned long*  FormatFlags
        );

        HRESULT GetNumberTextReplacements (
            [out]  unsigned long*  NumRepl
        );

        HRESULT GetTextReplacement (
            [in]  const char*  SrcText,
            [in]  unsigned long  Index,
            [out]  char*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  char*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacement (
            [in]  const char*  SrcText,
            [in]  const char*  DstText
        );

        HRESULT RemoveTextReplacements();

        HRESULT OutputTextReplacements (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugControl3
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(7df74a86-b03f-407f-90ab-a20dadcead08),
        helpstring("IDebugControl3")
    ]

    interface IDebugControl3 : IUnknown {

        HRESULT GetInterrupt();

        HRESULT SetInterrupt (
            [in]  unsigned long  Flags
        );

        HRESULT GetInterruptTimeout (
            [out]  unsigned long*  Seconds
        );

        HRESULT SetInterruptTimeout (
            [in]  unsigned long  Seconds
        );

        HRESULT GetLogFile (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFile (
            [in]  const char*  File,
            [in]  BOOL  Append
        );

        HRESULT CloseLogFile();

        HRESULT GetLogMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetLogMask (
            [in]  unsigned long  Mask
        );

        HRESULT Input (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInput (
            [in]  const char*  Buffer
        );

        HRESULT OutputVaList (
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaList (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaList (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptText (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT OutputCurrentState (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT OutputVersionInformation (
            [in]  unsigned long  OutputControl
        );

        HRESULT GetNotifyEventHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT SetNotifyEventHandle (
            [in]  unsigned __int64  Handle
        );

        HRESULT Assemble (
            [in]  unsigned __int64  Offset,
            [in]  const char*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT Disassemble (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetDisassembleEffectiveOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputDisassembly (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT OutputDisassemblyLines (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  PreviousLines,
            [in]  unsigned long  TotalLines,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  OffsetLine,
            [out]  unsigned __int64*  StartOffset,
            [out]  unsigned __int64*  EndOffset,
            [out]  unsigned __int64*  LineOffsets
        );

        HRESULT GetNearInstruction (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  unsigned __int64*  NearOffset
        );

        HRESULT GetStackTrace (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT GetReturnOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetDebuggeeType (
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

        HRESULT GetActualProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetExecutingProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetNumberPossibleExecutingProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetPossibleExecutingProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetNumberProcessors (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemVersion (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Major,
            [out]  unsigned long*  Minor,
            [out]  char*  ServicePackString,
            [in]  unsigned long  ServicePackStringSize,
            [out]  unsigned long*  ServicePackStringUsed,
            [out]  unsigned long*  ServicePackNumber,
            [out]  char*  BuildString,
            [in]  unsigned long  BuildStringSize,
            [out]  unsigned long*  BuildStringUsed
        );

        HRESULT GetPageSize (
            [out]  unsigned long*  Size
        );

        HRESULT IsPointer64Bit();

        HRESULT ReadBugCheckData (
            [out]  unsigned long*  Code,
            [out]  unsigned __int64*  Arg1,
            [out]  unsigned __int64*  Arg2,
            [out]  unsigned __int64*  Arg3,
            [out]  unsigned __int64*  Arg4
        );

        HRESULT GetNumberSupportedProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetSupportedProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetProcessorTypeNames (
            [in]  unsigned long  Type,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEffectiveProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT SetEffectiveProcessorType (
            [in]  unsigned long  Type
        );

        HRESULT GetExecutionStatus (
            [out]  unsigned long*  Status
        );

        HRESULT SetExecutionStatus (
            [in]  unsigned long  Status
        );

        HRESULT GetCodeLevel (
            [out]  unsigned long*  Level
        );

        HRESULT SetCodeLevel (
            [in]  unsigned long  Level
        );

        HRESULT GetEngineOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetSystemErrorControl (
            [out]  unsigned long*  OutputLevel,
            [out]  unsigned long*  BreakLevel
        );

        HRESULT SetSystemErrorControl (
            [in]  unsigned long  OutputLevel,
            [in]  unsigned long  BreakLevel
        );

        HRESULT GetTextMacro (
            [in]  unsigned long  Slot,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacro (
            [in]  unsigned long  Slot,
            [in]  const char*  Macro
        );

        HRESULT GetRadix (
            [out]  unsigned long*  Radix
        );

        HRESULT SetRadix (
            [in]  unsigned long  Radix
        );

        HRESULT Evaluate (
            [in]  const char*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT CoerceValue (
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long  OutType,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT CoerceValues (
            [in]  unsigned long  Count,
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long*  OutTypes,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT Execute (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFile (
            [in]  unsigned long  OutputControl,
            [in]  const char*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetNumberBreakpoints (
            [out]  unsigned long*  Number
        );

        HRESULT GetBreakpointByIndex (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointById (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Ids,
            [in]  unsigned long  Start,
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT AddBreakpoint (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT RemoveBreakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT AddExtension (
            [in]  const char*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT RemoveExtension (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetExtensionByPath (
            [in]  const char*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtension (
            [in]  unsigned __int64  Handle,
            [in]  const char*  Function,
            [in]  const char*  Arguments
        );

        HRESULT GetExtensionFunction (
            [in]  unsigned __int64  Handle,
            [in]  const char*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetWindbgExtensionApis32 (
            [in]  PWINDBG_EXTENSION_APIS32  Api
        );

        HRESULT GetWindbgExtensionApis64 (
            [in]  PWINDBG_EXTENSION_APIS64  Api
        );

        HRESULT GetNumberEventFilters (
            [out]  unsigned long*  SpecificEvents,
            [out]  unsigned long*  SpecificExceptions,
            [out]  unsigned long*  ArbitraryExceptions
        );

        HRESULT GetEventFilterText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT GetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT SetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [in]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT GetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [in]  const char*  Argument
        );

        HRESULT GetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Codes,
            [in]  unsigned long  Start,
            [out]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT SetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT GetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT WaitForEvent (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Timeout
        );

        HRESULT GetLastEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetCurrentTimeDate (
            [out]  unsigned long*  TimeDate
        );

        HRESULT GetCurrentSystemUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetDumpFormatFlags (
            [out]  unsigned long*  FormatFlags
        );

        HRESULT GetNumberTextReplacements (
            [out]  unsigned long*  NumRepl
        );

        HRESULT GetTextReplacement (
            [in]  const char*  SrcText,
            [in]  unsigned long  Index,
            [out]  char*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  char*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacement (
            [in]  const char*  SrcText,
            [in]  const char*  DstText
        );

        HRESULT RemoveTextReplacements();

        HRESULT OutputTextReplacements (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT GetAssemblyOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetExpressionSyntax (
            [out]  unsigned long*  Flags
        );

        HRESULT SetExpressionSyntax (
            [in]  unsigned long  Flags
        );

        HRESULT SetExpressionSyntaxByName (
            [in]  const char*  AbbrevName
        );

        HRESULT GetNumberExpressionSyntaxes (
            [out]  unsigned long*  Number
        );

        HRESULT GetExpressionSyntaxNames (
            [in]  unsigned long  Index,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetNumberEvents (
            [out]  unsigned long*  Events
        );

        HRESULT GetEventIndexDescription (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetCurrentEventIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetNextEventIndex (
            [in]  unsigned long  Relation,
            [in]  unsigned long  Value,
            [out]  unsigned long*  NextIndex
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugControl4
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(94e60ce9-9b41-4b19-9fc0-6d9eb35272b3),
        helpstring("IDebugControl4")
    ]

    interface IDebugControl4 : IUnknown {

        HRESULT GetInterrupt();

        HRESULT SetInterrupt (
            [in]  unsigned long  Flags
        );

        HRESULT GetInterruptTimeout (
            [out]  unsigned long*  Seconds
        );

        HRESULT SetInterruptTimeout (
            [in]  unsigned long  Seconds
        );

        HRESULT GetLogFile (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFile (
            [in]  const char*  File,
            [in]  BOOL  Append
        );

        HRESULT CloseLogFile();

        HRESULT GetLogMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetLogMask (
            [in]  unsigned long  Mask
        );

        HRESULT Input (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInput (
            [in]  const char*  Buffer
        );

        HRESULT OutputVaList (
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaList (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaList (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptText (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT OutputCurrentState (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT OutputVersionInformation (
            [in]  unsigned long  OutputControl
        );

        HRESULT GetNotifyEventHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT SetNotifyEventHandle (
            [in]  unsigned __int64  Handle
        );

        HRESULT Assemble (
            [in]  unsigned __int64  Offset,
            [in]  const char*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT Disassemble (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetDisassembleEffectiveOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputDisassembly (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT OutputDisassemblyLines (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  PreviousLines,
            [in]  unsigned long  TotalLines,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  OffsetLine,
            [out]  unsigned __int64*  StartOffset,
            [out]  unsigned __int64*  EndOffset,
            [out]  unsigned __int64*  LineOffsets
        );

        HRESULT GetNearInstruction (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  unsigned __int64*  NearOffset
        );

        HRESULT GetStackTrace (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT GetReturnOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetDebuggeeType (
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

        HRESULT GetActualProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetExecutingProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetNumberPossibleExecutingProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetPossibleExecutingProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetNumberProcessors (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemVersion (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Major,
            [out]  unsigned long*  Minor,
            [out]  char*  ServicePackString,
            [in]  unsigned long  ServicePackStringSize,
            [out]  unsigned long*  ServicePackStringUsed,
            [out]  unsigned long*  ServicePackNumber,
            [out]  char*  BuildString,
            [in]  unsigned long  BuildStringSize,
            [out]  unsigned long*  BuildStringUsed
        );

        HRESULT GetPageSize (
            [out]  unsigned long*  Size
        );

        HRESULT IsPointer64Bit();

        HRESULT ReadBugCheckData (
            [out]  unsigned long*  Code,
            [out]  unsigned __int64*  Arg1,
            [out]  unsigned __int64*  Arg2,
            [out]  unsigned __int64*  Arg3,
            [out]  unsigned __int64*  Arg4
        );

        HRESULT GetNumberSupportedProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetSupportedProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetProcessorTypeNames (
            [in]  unsigned long  Type,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEffectiveProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT SetEffectiveProcessorType (
            [in]  unsigned long  Type
        );

        HRESULT GetExecutionStatus (
            [out]  unsigned long*  Status
        );

        HRESULT SetExecutionStatus (
            [in]  unsigned long  Status
        );

        HRESULT GetCodeLevel (
            [out]  unsigned long*  Level
        );

        HRESULT SetCodeLevel (
            [in]  unsigned long  Level
        );

        HRESULT GetEngineOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetSystemErrorControl (
            [out]  unsigned long*  OutputLevel,
            [out]  unsigned long*  BreakLevel
        );

        HRESULT SetSystemErrorControl (
            [in]  unsigned long  OutputLevel,
            [in]  unsigned long  BreakLevel
        );

        HRESULT GetTextMacro (
            [in]  unsigned long  Slot,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacro (
            [in]  unsigned long  Slot,
            [in]  const char*  Macro
        );

        HRESULT GetRadix (
            [out]  unsigned long*  Radix
        );

        HRESULT SetRadix (
            [in]  unsigned long  Radix
        );

        HRESULT Evaluate (
            [in]  const char*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT CoerceValue (
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long  OutType,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT CoerceValues (
            [in]  unsigned long  Count,
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long*  OutTypes,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT Execute (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFile (
            [in]  unsigned long  OutputControl,
            [in]  const char*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetNumberBreakpoints (
            [out]  unsigned long*  Number
        );

        HRESULT GetBreakpointByIndex (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointById (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Ids,
            [in]  unsigned long  Start,
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT AddBreakpoint (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT RemoveBreakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT AddExtension (
            [in]  const char*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT RemoveExtension (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetExtensionByPath (
            [in]  const char*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtension (
            [in]  unsigned __int64  Handle,
            [in]  const char*  Function,
            [in]  const char*  Arguments
        );

        HRESULT GetExtensionFunction (
            [in]  unsigned __int64  Handle,
            [in]  const char*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetWindbgExtensionApis32 (
            [in]  PWINDBG_EXTENSION_APIS32  Api
        );

        HRESULT GetWindbgExtensionApis64 (
            [in]  PWINDBG_EXTENSION_APIS64  Api
        );

        HRESULT GetNumberEventFilters (
            [out]  unsigned long*  SpecificEvents,
            [out]  unsigned long*  SpecificExceptions,
            [out]  unsigned long*  ArbitraryExceptions
        );

        HRESULT GetEventFilterText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT GetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT SetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [in]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT GetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [in]  const char*  Argument
        );

        HRESULT GetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Codes,
            [in]  unsigned long  Start,
            [out]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT SetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT GetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT WaitForEvent (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Timeout
        );

        HRESULT GetLastEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetCurrentTimeDate (
            [out]  unsigned long*  TimeDate
        );

        HRESULT GetCurrentSystemUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetDumpFormatFlags (
            [out]  unsigned long*  FormatFlags
        );

        HRESULT GetNumberTextReplacements (
            [out]  unsigned long*  NumRepl
        );

        HRESULT GetTextReplacement (
            [in]  const char*  SrcText,
            [in]  unsigned long  Index,
            [out]  char*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  char*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacement (
            [in]  const char*  SrcText,
            [in]  const char*  DstText
        );

        HRESULT RemoveTextReplacements();

        HRESULT OutputTextReplacements (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT GetAssemblyOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetExpressionSyntax (
            [out]  unsigned long*  Flags
        );

        HRESULT SetExpressionSyntax (
            [in]  unsigned long  Flags
        );

        HRESULT SetExpressionSyntaxByName (
            [in]  const char*  AbbrevName
        );

        HRESULT GetNumberExpressionSyntaxes (
            [out]  unsigned long*  Number
        );

        HRESULT GetExpressionSyntaxNames (
            [in]  unsigned long  Index,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetNumberEvents (
            [out]  unsigned long*  Events
        );

        HRESULT GetEventIndexDescription (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetCurrentEventIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetNextEventIndex (
            [in]  unsigned long  Relation,
            [in]  unsigned long  Value,
            [out]  unsigned long*  NextIndex
        );

        HRESULT GetLogFileWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFileWide (
            [in]  const wchar_t*  File,
            [in]  BOOL  Append
        );

        HRESULT InputWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInputWide (
            [in]  const wchar_t*  Buffer
        );

        HRESULT OutputVaListWide (
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptTextWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT AssembleWide (
            [in]  unsigned __int64  Offset,
            [in]  const wchar_t*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT DisassembleWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetProcessorTypeNamesWide (
            [in]  unsigned long  Type,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetTextMacroWide (
            [in]  unsigned long  Slot,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacroWide (
            [in]  unsigned long  Slot,
            [in]  const wchar_t*  Macro
        );

        HRESULT EvaluateWide (
            [in]  const wchar_t*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT ExecuteWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFileWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetBreakpointByIndex2 (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT GetBreakpointById2 (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT AddBreakpoint2 (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT RemoveBreakpoint2 (
            [in]  PDEBUG_BREAKPOINT2  Bp
        );

        HRESULT AddExtensionWide (
            [in]  const wchar_t*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetExtensionByPathWide (
            [in]  const wchar_t*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtensionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  Function,
            [in]  const wchar_t*  Arguments
        );

        HRESULT GetExtensionFunctionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetEventFilterTextWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Argument
        );

        HRESULT GetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetLastEventInformationWide (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  unsigned long  Index,
            [out]  wchar_t*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  wchar_t*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  const wchar_t*  DstText
        );

        HRESULT SetExpressionSyntaxByNameWide (
            [in]  const wchar_t*  AbbrevName
        );

        HRESULT GetExpressionSyntaxNamesWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEventIndexDescriptionWide (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetLogFile2 (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2 (
            [in]  const char*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetLogFile2Wide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2Wide (
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetSystemVersionValues (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Win32Major,
            [out]  unsigned long*  Win32Minor,
            [out]  unsigned long*  KdMajor,
            [out]  unsigned long*  KdMinor
        );

        HRESULT GetSystemVersionString (
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSystemVersionStringWide (
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetContextStackTrace (
            [in]  void*  StartContext,
            [in]  unsigned long  StartContextSize,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputContextStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [in]  unsigned long  Flags
        );

        HRESULT GetStoredEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [out]  void*  Context,
            [in]  unsigned long  ContextSize,
            [out]  unsigned long*  ContextUsed,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed
        );

        HRESULT GetManagedStatus (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  char*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT GetManagedStatusWide (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  wchar_t*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT ResetManagedStatus (
            [in]  unsigned long  Flags
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugControl5
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(b2ffe162-2412-429f-8d1d-5bf6dd824696),
        helpstring("IDebugControl5")
    ]

    interface IDebugControl5 : IUnknown {

        HRESULT GetInterrupt();

        HRESULT SetInterrupt (
            [in]  unsigned long  Flags
        );

        HRESULT GetInterruptTimeout (
            [out]  unsigned long*  Seconds
        );

        HRESULT SetInterruptTimeout (
            [in]  unsigned long  Seconds
        );

        HRESULT GetLogFile (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFile (
            [in]  const char*  File,
            [in]  BOOL  Append
        );

        HRESULT CloseLogFile();

        HRESULT GetLogMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetLogMask (
            [in]  unsigned long  Mask
        );

        HRESULT Input (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInput (
            [in]  const char*  Buffer
        );

        HRESULT OutputVaList (
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaList (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaList (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptText (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT OutputCurrentState (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT OutputVersionInformation (
            [in]  unsigned long  OutputControl
        );

        HRESULT GetNotifyEventHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT SetNotifyEventHandle (
            [in]  unsigned __int64  Handle
        );

        HRESULT Assemble (
            [in]  unsigned __int64  Offset,
            [in]  const char*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT Disassemble (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetDisassembleEffectiveOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputDisassembly (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT OutputDisassemblyLines (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  PreviousLines,
            [in]  unsigned long  TotalLines,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  OffsetLine,
            [out]  unsigned __int64*  StartOffset,
            [out]  unsigned __int64*  EndOffset,
            [out]  unsigned __int64*  LineOffsets
        );

        HRESULT GetNearInstruction (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  unsigned __int64*  NearOffset
        );

        HRESULT GetStackTrace (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT GetReturnOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetDebuggeeType (
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

        HRESULT GetActualProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetExecutingProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetNumberPossibleExecutingProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetPossibleExecutingProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetNumberProcessors (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemVersion (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Major,
            [out]  unsigned long*  Minor,
            [out]  char*  ServicePackString,
            [in]  unsigned long  ServicePackStringSize,
            [out]  unsigned long*  ServicePackStringUsed,
            [out]  unsigned long*  ServicePackNumber,
            [out]  char*  BuildString,
            [in]  unsigned long  BuildStringSize,
            [out]  unsigned long*  BuildStringUsed
        );

        HRESULT GetPageSize (
            [out]  unsigned long*  Size
        );

        HRESULT IsPointer64Bit();

        HRESULT ReadBugCheckData (
            [out]  unsigned long*  Code,
            [out]  unsigned __int64*  Arg1,
            [out]  unsigned __int64*  Arg2,
            [out]  unsigned __int64*  Arg3,
            [out]  unsigned __int64*  Arg4
        );

        HRESULT GetNumberSupportedProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetSupportedProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetProcessorTypeNames (
            [in]  unsigned long  Type,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEffectiveProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT SetEffectiveProcessorType (
            [in]  unsigned long  Type
        );

        HRESULT GetExecutionStatus (
            [out]  unsigned long*  Status
        );

        HRESULT SetExecutionStatus (
            [in]  unsigned long  Status
        );

        HRESULT GetCodeLevel (
            [out]  unsigned long*  Level
        );

        HRESULT SetCodeLevel (
            [in]  unsigned long  Level
        );

        HRESULT GetEngineOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetSystemErrorControl (
            [out]  unsigned long*  OutputLevel,
            [out]  unsigned long*  BreakLevel
        );

        HRESULT SetSystemErrorControl (
            [in]  unsigned long  OutputLevel,
            [in]  unsigned long  BreakLevel
        );

        HRESULT GetTextMacro (
            [in]  unsigned long  Slot,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacro (
            [in]  unsigned long  Slot,
            [in]  const char*  Macro
        );

        HRESULT GetRadix (
            [out]  unsigned long*  Radix
        );

        HRESULT SetRadix (
            [in]  unsigned long  Radix
        );

        HRESULT Evaluate (
            [in]  const char*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT CoerceValue (
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long  OutType,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT CoerceValues (
            [in]  unsigned long  Count,
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long*  OutTypes,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT Execute (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFile (
            [in]  unsigned long  OutputControl,
            [in]  const char*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetNumberBreakpoints (
            [out]  unsigned long*  Number
        );

        HRESULT GetBreakpointByIndex (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointById (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Ids,
            [in]  unsigned long  Start,
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT AddBreakpoint (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT RemoveBreakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT AddExtension (
            [in]  const char*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT RemoveExtension (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetExtensionByPath (
            [in]  const char*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtension (
            [in]  unsigned __int64  Handle,
            [in]  const char*  Function,
            [in]  const char*  Arguments
        );

        HRESULT GetExtensionFunction (
            [in]  unsigned __int64  Handle,
            [in]  const char*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetWindbgExtensionApis32 (
            [in]  PWINDBG_EXTENSION_APIS32  Api
        );

        HRESULT GetWindbgExtensionApis64 (
            [in]  PWINDBG_EXTENSION_APIS64  Api
        );

        HRESULT GetNumberEventFilters (
            [out]  unsigned long*  SpecificEvents,
            [out]  unsigned long*  SpecificExceptions,
            [out]  unsigned long*  ArbitraryExceptions
        );

        HRESULT GetEventFilterText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT GetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT SetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [in]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT GetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [in]  const char*  Argument
        );

        HRESULT GetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Codes,
            [in]  unsigned long  Start,
            [out]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT SetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT GetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT WaitForEvent (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Timeout
        );

        HRESULT GetLastEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetCurrentTimeDate (
            [out]  unsigned long*  TimeDate
        );

        HRESULT GetCurrentSystemUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetDumpFormatFlags (
            [out]  unsigned long*  FormatFlags
        );

        HRESULT GetNumberTextReplacements (
            [out]  unsigned long*  NumRepl
        );

        HRESULT GetTextReplacement (
            [in]  const char*  SrcText,
            [in]  unsigned long  Index,
            [out]  char*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  char*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacement (
            [in]  const char*  SrcText,
            [in]  const char*  DstText
        );

        HRESULT RemoveTextReplacements();

        HRESULT OutputTextReplacements (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT GetAssemblyOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetExpressionSyntax (
            [out]  unsigned long*  Flags
        );

        HRESULT SetExpressionSyntax (
            [in]  unsigned long  Flags
        );

        HRESULT SetExpressionSyntaxByName (
            [in]  const char*  AbbrevName
        );

        HRESULT GetNumberExpressionSyntaxes (
            [out]  unsigned long*  Number
        );

        HRESULT GetExpressionSyntaxNames (
            [in]  unsigned long  Index,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetNumberEvents (
            [out]  unsigned long*  Events
        );

        HRESULT GetEventIndexDescription (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetCurrentEventIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetNextEventIndex (
            [in]  unsigned long  Relation,
            [in]  unsigned long  Value,
            [out]  unsigned long*  NextIndex
        );

        HRESULT GetLogFileWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFileWide (
            [in]  const wchar_t*  File,
            [in]  BOOL  Append
        );

        HRESULT InputWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInputWide (
            [in]  const wchar_t*  Buffer
        );

        HRESULT OutputVaListWide (
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptTextWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT AssembleWide (
            [in]  unsigned __int64  Offset,
            [in]  const wchar_t*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT DisassembleWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetProcessorTypeNamesWide (
            [in]  unsigned long  Type,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetTextMacroWide (
            [in]  unsigned long  Slot,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacroWide (
            [in]  unsigned long  Slot,
            [in]  const wchar_t*  Macro
        );

        HRESULT EvaluateWide (
            [in]  const wchar_t*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT ExecuteWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFileWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetBreakpointByIndex2 (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT GetBreakpointById2 (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT AddBreakpoint2 (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT RemoveBreakpoint2 (
            [in]  PDEBUG_BREAKPOINT2  Bp
        );

        HRESULT AddExtensionWide (
            [in]  const wchar_t*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetExtensionByPathWide (
            [in]  const wchar_t*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtensionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  Function,
            [in]  const wchar_t*  Arguments
        );

        HRESULT GetExtensionFunctionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetEventFilterTextWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Argument
        );

        HRESULT GetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetLastEventInformationWide (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  unsigned long  Index,
            [out]  wchar_t*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  wchar_t*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  const wchar_t*  DstText
        );

        HRESULT SetExpressionSyntaxByNameWide (
            [in]  const wchar_t*  AbbrevName
        );

        HRESULT GetExpressionSyntaxNamesWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEventIndexDescriptionWide (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetLogFile2 (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2 (
            [in]  const char*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetLogFile2Wide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2Wide (
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetSystemVersionValues (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Win32Major,
            [out]  unsigned long*  Win32Minor,
            [out]  unsigned long*  KdMajor,
            [out]  unsigned long*  KdMinor
        );

        HRESULT GetSystemVersionString (
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSystemVersionStringWide (
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetContextStackTrace (
            [in]  void*  StartContext,
            [in]  unsigned long  StartContextSize,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputContextStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [in]  unsigned long  Flags
        );

        HRESULT GetStoredEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [out]  void*  Context,
            [in]  unsigned long  ContextSize,
            [out]  unsigned long*  ContextUsed,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed
        );

        HRESULT GetManagedStatus (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  char*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT GetManagedStatusWide (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  wchar_t*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT ResetManagedStatus (
            [in]  unsigned long  Flags
        );

        HRESULT GetStackTraceEx (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputStackTraceEx (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetContextStackTraceEx (
            [in]  void*  StartContext,
            [in]  unsigned long  StartContextSize,
            [out]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [out]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputContextStackTraceEx (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [in]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [in]  unsigned long  Flags
        );

        HRESULT GetBreakpointByGuid (
            [in]  LPGUID  Guid,
            [out]  PDEBUG_BREAKPOINT3*  Bp
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugControl6
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(bc0d583f-126d-43a1-9cc4-a860ab1d537b),
        helpstring("IDebugControl6")
    ]

    interface IDebugControl6 : IUnknown {

        HRESULT GetInterrupt();

        HRESULT SetInterrupt (
            [in]  unsigned long  Flags
        );

        HRESULT GetInterruptTimeout (
            [out]  unsigned long*  Seconds
        );

        HRESULT SetInterruptTimeout (
            [in]  unsigned long  Seconds
        );

        HRESULT GetLogFile (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFile (
            [in]  const char*  File,
            [in]  BOOL  Append
        );

        HRESULT CloseLogFile();

        HRESULT GetLogMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetLogMask (
            [in]  unsigned long  Mask
        );

        HRESULT Input (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInput (
            [in]  const char*  Buffer
        );

        HRESULT OutputVaList (
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaList (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaList (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptText (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT OutputCurrentState (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT OutputVersionInformation (
            [in]  unsigned long  OutputControl
        );

        HRESULT GetNotifyEventHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT SetNotifyEventHandle (
            [in]  unsigned __int64  Handle
        );

        HRESULT Assemble (
            [in]  unsigned __int64  Offset,
            [in]  const char*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT Disassemble (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetDisassembleEffectiveOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputDisassembly (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT OutputDisassemblyLines (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  PreviousLines,
            [in]  unsigned long  TotalLines,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  OffsetLine,
            [out]  unsigned __int64*  StartOffset,
            [out]  unsigned __int64*  EndOffset,
            [out]  unsigned __int64*  LineOffsets
        );

        HRESULT GetNearInstruction (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  unsigned __int64*  NearOffset
        );

        HRESULT GetStackTrace (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT GetReturnOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetDebuggeeType (
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

        HRESULT GetActualProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetExecutingProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetNumberPossibleExecutingProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetPossibleExecutingProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetNumberProcessors (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemVersion (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Major,
            [out]  unsigned long*  Minor,
            [out]  char*  ServicePackString,
            [in]  unsigned long  ServicePackStringSize,
            [out]  unsigned long*  ServicePackStringUsed,
            [out]  unsigned long*  ServicePackNumber,
            [out]  char*  BuildString,
            [in]  unsigned long  BuildStringSize,
            [out]  unsigned long*  BuildStringUsed
        );

        HRESULT GetPageSize (
            [out]  unsigned long*  Size
        );

        HRESULT IsPointer64Bit();

        HRESULT ReadBugCheckData (
            [out]  unsigned long*  Code,
            [out]  unsigned __int64*  Arg1,
            [out]  unsigned __int64*  Arg2,
            [out]  unsigned __int64*  Arg3,
            [out]  unsigned __int64*  Arg4
        );

        HRESULT GetNumberSupportedProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetSupportedProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetProcessorTypeNames (
            [in]  unsigned long  Type,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEffectiveProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT SetEffectiveProcessorType (
            [in]  unsigned long  Type
        );

        HRESULT GetExecutionStatus (
            [out]  unsigned long*  Status
        );

        HRESULT SetExecutionStatus (
            [in]  unsigned long  Status
        );

        HRESULT GetCodeLevel (
            [out]  unsigned long*  Level
        );

        HRESULT SetCodeLevel (
            [in]  unsigned long  Level
        );

        HRESULT GetEngineOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetSystemErrorControl (
            [out]  unsigned long*  OutputLevel,
            [out]  unsigned long*  BreakLevel
        );

        HRESULT SetSystemErrorControl (
            [in]  unsigned long  OutputLevel,
            [in]  unsigned long  BreakLevel
        );

        HRESULT GetTextMacro (
            [in]  unsigned long  Slot,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacro (
            [in]  unsigned long  Slot,
            [in]  const char*  Macro
        );

        HRESULT GetRadix (
            [out]  unsigned long*  Radix
        );

        HRESULT SetRadix (
            [in]  unsigned long  Radix
        );

        HRESULT Evaluate (
            [in]  const char*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT CoerceValue (
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long  OutType,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT CoerceValues (
            [in]  unsigned long  Count,
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long*  OutTypes,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT Execute (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFile (
            [in]  unsigned long  OutputControl,
            [in]  const char*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetNumberBreakpoints (
            [out]  unsigned long*  Number
        );

        HRESULT GetBreakpointByIndex (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointById (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Ids,
            [in]  unsigned long  Start,
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT AddBreakpoint (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT RemoveBreakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT AddExtension (
            [in]  const char*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT RemoveExtension (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetExtensionByPath (
            [in]  const char*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtension (
            [in]  unsigned __int64  Handle,
            [in]  const char*  Function,
            [in]  const char*  Arguments
        );

        HRESULT GetExtensionFunction (
            [in]  unsigned __int64  Handle,
            [in]  const char*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetWindbgExtensionApis32 (
            [in]  PWINDBG_EXTENSION_APIS32  Api
        );

        HRESULT GetWindbgExtensionApis64 (
            [in]  PWINDBG_EXTENSION_APIS64  Api
        );

        HRESULT GetNumberEventFilters (
            [out]  unsigned long*  SpecificEvents,
            [out]  unsigned long*  SpecificExceptions,
            [out]  unsigned long*  ArbitraryExceptions
        );

        HRESULT GetEventFilterText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT GetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT SetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [in]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT GetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [in]  const char*  Argument
        );

        HRESULT GetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Codes,
            [in]  unsigned long  Start,
            [out]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT SetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT GetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT WaitForEvent (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Timeout
        );

        HRESULT GetLastEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetCurrentTimeDate (
            [out]  unsigned long*  TimeDate
        );

        HRESULT GetCurrentSystemUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetDumpFormatFlags (
            [out]  unsigned long*  FormatFlags
        );

        HRESULT GetNumberTextReplacements (
            [out]  unsigned long*  NumRepl
        );

        HRESULT GetTextReplacement (
            [in]  const char*  SrcText,
            [in]  unsigned long  Index,
            [out]  char*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  char*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacement (
            [in]  const char*  SrcText,
            [in]  const char*  DstText
        );

        HRESULT RemoveTextReplacements();

        HRESULT OutputTextReplacements (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT GetAssemblyOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetExpressionSyntax (
            [out]  unsigned long*  Flags
        );

        HRESULT SetExpressionSyntax (
            [in]  unsigned long  Flags
        );

        HRESULT SetExpressionSyntaxByName (
            [in]  const char*  AbbrevName
        );

        HRESULT GetNumberExpressionSyntaxes (
            [out]  unsigned long*  Number
        );

        HRESULT GetExpressionSyntaxNames (
            [in]  unsigned long  Index,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetNumberEvents (
            [out]  unsigned long*  Events
        );

        HRESULT GetEventIndexDescription (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetCurrentEventIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetNextEventIndex (
            [in]  unsigned long  Relation,
            [in]  unsigned long  Value,
            [out]  unsigned long*  NextIndex
        );

        HRESULT GetLogFileWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFileWide (
            [in]  const wchar_t*  File,
            [in]  BOOL  Append
        );

        HRESULT InputWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInputWide (
            [in]  const wchar_t*  Buffer
        );

        HRESULT OutputVaListWide (
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptTextWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT AssembleWide (
            [in]  unsigned __int64  Offset,
            [in]  const wchar_t*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT DisassembleWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetProcessorTypeNamesWide (
            [in]  unsigned long  Type,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetTextMacroWide (
            [in]  unsigned long  Slot,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacroWide (
            [in]  unsigned long  Slot,
            [in]  const wchar_t*  Macro
        );

        HRESULT EvaluateWide (
            [in]  const wchar_t*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT ExecuteWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFileWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetBreakpointByIndex2 (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT GetBreakpointById2 (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT AddBreakpoint2 (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT RemoveBreakpoint2 (
            [in]  PDEBUG_BREAKPOINT2  Bp
        );

        HRESULT AddExtensionWide (
            [in]  const wchar_t*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetExtensionByPathWide (
            [in]  const wchar_t*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtensionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  Function,
            [in]  const wchar_t*  Arguments
        );

        HRESULT GetExtensionFunctionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetEventFilterTextWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Argument
        );

        HRESULT GetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetLastEventInformationWide (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  unsigned long  Index,
            [out]  wchar_t*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  wchar_t*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  const wchar_t*  DstText
        );

        HRESULT SetExpressionSyntaxByNameWide (
            [in]  const wchar_t*  AbbrevName
        );

        HRESULT GetExpressionSyntaxNamesWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEventIndexDescriptionWide (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetLogFile2 (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2 (
            [in]  const char*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetLogFile2Wide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2Wide (
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetSystemVersionValues (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Win32Major,
            [out]  unsigned long*  Win32Minor,
            [out]  unsigned long*  KdMajor,
            [out]  unsigned long*  KdMinor
        );

        HRESULT GetSystemVersionString (
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSystemVersionStringWide (
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetContextStackTrace (
            [in]  void*  StartContext,
            [in]  unsigned long  StartContextSize,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputContextStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [in]  unsigned long  Flags
        );

        HRESULT GetStoredEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [out]  void*  Context,
            [in]  unsigned long  ContextSize,
            [out]  unsigned long*  ContextUsed,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed
        );

        HRESULT GetManagedStatus (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  char*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT GetManagedStatusWide (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  wchar_t*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT ResetManagedStatus (
            [in]  unsigned long  Flags
        );

        HRESULT GetStackTraceEx (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputStackTraceEx (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetContextStackTraceEx (
            [in]  void*  StartContext,
            [in]  unsigned long  StartContextSize,
            [out]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [out]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputContextStackTraceEx (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [in]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [in]  unsigned long  Flags
        );

        HRESULT GetBreakpointByGuid (
            [in]  LPGUID  Guid,
            [out]  PDEBUG_BREAKPOINT3*  Bp
        );

        HRESULT GetExecutionStatusEx (
            [out]  unsigned long*  Status
        );

        HRESULT GetSynchronizationStatus (
            [out]  unsigned long*  SendsAttempted,
            [out]  unsigned long*  SecondsSinceLastResponse
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugControl7
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(b86fb3b1-80d4-475b-aea3-cf06539cf63a),
        helpstring("IDebugControl7")
    ]

    interface IDebugControl7 : IUnknown {

        HRESULT GetInterrupt();

        HRESULT SetInterrupt (
            [in]  unsigned long  Flags
        );

        HRESULT GetInterruptTimeout (
            [out]  unsigned long*  Seconds
        );

        HRESULT SetInterruptTimeout (
            [in]  unsigned long  Seconds
        );

        HRESULT GetLogFile (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFile (
            [in]  const char*  File,
            [in]  BOOL  Append
        );

        HRESULT CloseLogFile();

        HRESULT GetLogMask (
            [out]  unsigned long*  Mask
        );

        HRESULT SetLogMask (
            [in]  unsigned long  Mask
        );

        HRESULT Input (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInput (
            [in]  const char*  Buffer
        );

        HRESULT OutputVaList (
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaList (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaList (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptText (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT OutputCurrentState (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT OutputVersionInformation (
            [in]  unsigned long  OutputControl
        );

        HRESULT GetNotifyEventHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT SetNotifyEventHandle (
            [in]  unsigned __int64  Handle
        );

        HRESULT Assemble (
            [in]  unsigned __int64  Offset,
            [in]  const char*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT Disassemble (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetDisassembleEffectiveOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputDisassembly (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT OutputDisassemblyLines (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  PreviousLines,
            [in]  unsigned long  TotalLines,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  OffsetLine,
            [out]  unsigned __int64*  StartOffset,
            [out]  unsigned __int64*  EndOffset,
            [out]  unsigned __int64*  LineOffsets
        );

        HRESULT GetNearInstruction (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  unsigned __int64*  NearOffset
        );

        HRESULT GetStackTrace (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT GetReturnOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT OutputStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetDebuggeeType (
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

        HRESULT GetActualProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetExecutingProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT GetNumberPossibleExecutingProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetPossibleExecutingProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetNumberProcessors (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemVersion (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Major,
            [out]  unsigned long*  Minor,
            [out]  char*  ServicePackString,
            [in]  unsigned long  ServicePackStringSize,
            [out]  unsigned long*  ServicePackStringUsed,
            [out]  unsigned long*  ServicePackNumber,
            [out]  char*  BuildString,
            [in]  unsigned long  BuildStringSize,
            [out]  unsigned long*  BuildStringUsed
        );

        HRESULT GetPageSize (
            [out]  unsigned long*  Size
        );

        HRESULT IsPointer64Bit();

        HRESULT ReadBugCheckData (
            [out]  unsigned long*  Code,
            [out]  unsigned __int64*  Arg1,
            [out]  unsigned __int64*  Arg2,
            [out]  unsigned __int64*  Arg3,
            [out]  unsigned __int64*  Arg4
        );

        HRESULT GetNumberSupportedProcessorTypes (
            [out]  unsigned long*  Number
        );

        HRESULT GetSupportedProcessorTypes (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Types
        );

        HRESULT GetProcessorTypeNames (
            [in]  unsigned long  Type,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEffectiveProcessorType (
            [out]  unsigned long*  Type
        );

        HRESULT SetEffectiveProcessorType (
            [in]  unsigned long  Type
        );

        HRESULT GetExecutionStatus (
            [out]  unsigned long*  Status
        );

        HRESULT SetExecutionStatus (
            [in]  unsigned long  Status
        );

        HRESULT GetCodeLevel (
            [out]  unsigned long*  Level
        );

        HRESULT SetCodeLevel (
            [in]  unsigned long  Level
        );

        HRESULT GetEngineOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetEngineOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetSystemErrorControl (
            [out]  unsigned long*  OutputLevel,
            [out]  unsigned long*  BreakLevel
        );

        HRESULT SetSystemErrorControl (
            [in]  unsigned long  OutputLevel,
            [in]  unsigned long  BreakLevel
        );

        HRESULT GetTextMacro (
            [in]  unsigned long  Slot,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacro (
            [in]  unsigned long  Slot,
            [in]  const char*  Macro
        );

        HRESULT GetRadix (
            [out]  unsigned long*  Radix
        );

        HRESULT SetRadix (
            [in]  unsigned long  Radix
        );

        HRESULT Evaluate (
            [in]  const char*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT CoerceValue (
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long  OutType,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT CoerceValues (
            [in]  unsigned long  Count,
            [in]  PDEBUG_VALUE  In,
            [in]  unsigned long*  OutTypes,
            [out]  PDEBUG_VALUE  Out
        );

        HRESULT Execute (
            [in]  unsigned long  OutputControl,
            [in]  const char*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFile (
            [in]  unsigned long  OutputControl,
            [in]  const char*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetNumberBreakpoints (
            [out]  unsigned long*  Number
        );

        HRESULT GetBreakpointByIndex (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointById (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT GetBreakpointParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Ids,
            [in]  unsigned long  Start,
            [out]  PDEBUG_BREAKPOINT_PARAMETERS  Params
        );

        HRESULT AddBreakpoint (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT*  Bp
        );

        HRESULT RemoveBreakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT AddExtension (
            [in]  const char*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT RemoveExtension (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetExtensionByPath (
            [in]  const char*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtension (
            [in]  unsigned __int64  Handle,
            [in]  const char*  Function,
            [in]  const char*  Arguments
        );

        HRESULT GetExtensionFunction (
            [in]  unsigned __int64  Handle,
            [in]  const char*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetWindbgExtensionApis32 (
            [in]  PWINDBG_EXTENSION_APIS32  Api
        );

        HRESULT GetWindbgExtensionApis64 (
            [in]  PWINDBG_EXTENSION_APIS64  Api
        );

        HRESULT GetNumberEventFilters (
            [out]  unsigned long*  SpecificEvents,
            [out]  unsigned long*  SpecificExceptions,
            [out]  unsigned long*  ArbitraryExceptions
        );

        HRESULT GetEventFilterText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT GetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT SetSpecificFilterParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [in]  PDEBUG_SPECIFIC_FILTER_PARAMETERS  Params
        );

        HRESULT GetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgument (
            [in]  unsigned long  Index,
            [in]  const char*  Argument
        );

        HRESULT GetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Codes,
            [in]  unsigned long  Start,
            [out]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT SetExceptionFilterParameters (
            [in]  unsigned long  Count,
            [in]  PDEBUG_EXCEPTION_FILTER_PARAMETERS  Params
        );

        HRESULT GetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommand (
            [in]  unsigned long  Index,
            [in]  const char*  Command
        );

        HRESULT WaitForEvent (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Timeout
        );

        HRESULT GetLastEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  char*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetCurrentTimeDate (
            [out]  unsigned long*  TimeDate
        );

        HRESULT GetCurrentSystemUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetDumpFormatFlags (
            [out]  unsigned long*  FormatFlags
        );

        HRESULT GetNumberTextReplacements (
            [out]  unsigned long*  NumRepl
        );

        HRESULT GetTextReplacement (
            [in]  const char*  SrcText,
            [in]  unsigned long  Index,
            [out]  char*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  char*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacement (
            [in]  const char*  SrcText,
            [in]  const char*  DstText
        );

        HRESULT RemoveTextReplacements();

        HRESULT OutputTextReplacements (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT GetAssemblyOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetAssemblyOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetExpressionSyntax (
            [out]  unsigned long*  Flags
        );

        HRESULT SetExpressionSyntax (
            [in]  unsigned long  Flags
        );

        HRESULT SetExpressionSyntaxByName (
            [in]  const char*  AbbrevName
        );

        HRESULT GetNumberExpressionSyntaxes (
            [out]  unsigned long*  Number
        );

        HRESULT GetExpressionSyntaxNames (
            [in]  unsigned long  Index,
            [out]  char*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  char*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetNumberEvents (
            [out]  unsigned long*  Events
        );

        HRESULT GetEventIndexDescription (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetCurrentEventIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetNextEventIndex (
            [in]  unsigned long  Relation,
            [in]  unsigned long  Value,
            [out]  unsigned long*  NextIndex
        );

        HRESULT GetLogFileWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  bool*  Append
        );

        HRESULT OpenLogFileWide (
            [in]  const wchar_t*  File,
            [in]  BOOL  Append
        );

        HRESULT InputWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InputSize
        );

        HRESULT ReturnInputWide (
            [in]  const wchar_t*  Buffer
        );

        HRESULT OutputVaListWide (
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT ControlledOutputVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT OutputPromptVaListWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Format,
            [in]  char*  Args
        );

        HRESULT GetPromptTextWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT AssembleWide (
            [in]  unsigned __int64  Offset,
            [in]  const wchar_t*  Instr,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT DisassembleWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DisassemblySize,
            [out]  unsigned __int64*  EndOffset
        );

        HRESULT GetProcessorTypeNamesWide (
            [in]  unsigned long  Type,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetTextMacroWide (
            [in]  unsigned long  Slot,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MacroSize
        );

        HRESULT SetTextMacroWide (
            [in]  unsigned long  Slot,
            [in]  const wchar_t*  Macro
        );

        HRESULT EvaluateWide (
            [in]  const wchar_t*  Expression,
            [in]  unsigned long  DesiredType,
            [out]  PDEBUG_VALUE  Value,
            [out]  unsigned long*  RemainderIndex
        );

        HRESULT ExecuteWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  Command,
            [in]  unsigned long  Flags
        );

        HRESULT ExecuteCommandFileWide (
            [in]  unsigned long  OutputControl,
            [in]  const wchar_t*  CommandFile,
            [in]  unsigned long  Flags
        );

        HRESULT GetBreakpointByIndex2 (
            [in]  unsigned long  Index,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT GetBreakpointById2 (
            [in]  unsigned long  Id,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT AddBreakpoint2 (
            [in]  unsigned long  Type,
            [in]  unsigned long  DesiredId,
            [out]  PDEBUG_BREAKPOINT2*  Bp
        );

        HRESULT RemoveBreakpoint2 (
            [in]  PDEBUG_BREAKPOINT2  Bp
        );

        HRESULT AddExtensionWide (
            [in]  const wchar_t*  Path,
            [in]  unsigned long  Flags,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetExtensionByPathWide (
            [in]  const wchar_t*  Path,
            [out]  unsigned __int64*  Handle
        );

        HRESULT CallExtensionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  Function,
            [in]  const wchar_t*  Arguments
        );

        HRESULT GetExtensionFunctionWide (
            [in]  unsigned __int64  Handle,
            [in]  const wchar_t*  FuncName,
            [out]  FARPROC*  Function
        );

        HRESULT GetEventFilterTextWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TextSize
        );

        HRESULT GetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetEventFilterCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ArgumentSize
        );

        HRESULT SetSpecificFilterArgumentWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Argument
        );

        HRESULT GetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  CommandSize
        );

        HRESULT SetExceptionFilterSecondCommandWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Command
        );

        HRESULT GetLastEventInformationWide (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed,
            [out]  wchar_t*  Description,
            [in]  unsigned long  DescriptionSize,
            [out]  unsigned long*  DescriptionUsed
        );

        HRESULT GetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  unsigned long  Index,
            [out]  wchar_t*  SrcBuffer,
            [in]  unsigned long  SrcBufferSize,
            [out]  unsigned long*  SrcSize,
            [out]  wchar_t*  DstBuffer,
            [in]  unsigned long  DstBufferSize,
            [out]  unsigned long*  DstSize
        );

        HRESULT SetTextReplacementWide (
            [in]  const wchar_t*  SrcText,
            [in]  const wchar_t*  DstText
        );

        HRESULT SetExpressionSyntaxByNameWide (
            [in]  const wchar_t*  AbbrevName
        );

        HRESULT GetExpressionSyntaxNamesWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  FullNameBuffer,
            [in]  unsigned long  FullNameBufferSize,
            [out]  unsigned long*  FullNameSize,
            [out]  wchar_t*  AbbrevNameBuffer,
            [in]  unsigned long  AbbrevNameBufferSize,
            [out]  unsigned long*  AbbrevNameSize
        );

        HRESULT GetEventIndexDescriptionWide (
            [in]  unsigned long  Index,
            [in]  unsigned long  Which,
            [in]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DescSize
        );

        HRESULT GetLogFile2 (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2 (
            [in]  const char*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetLogFile2Wide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned long*  Flags
        );

        HRESULT OpenLogFile2Wide (
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags
        );

        HRESULT GetSystemVersionValues (
            [out]  unsigned long*  PlatformId,
            [out]  unsigned long*  Win32Major,
            [out]  unsigned long*  Win32Minor,
            [out]  unsigned long*  KdMajor,
            [out]  unsigned long*  KdMinor
        );

        HRESULT GetSystemVersionString (
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSystemVersionStringWide (
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetContextStackTrace (
            [in]  void*  StartContext,
            [in]  unsigned long  StartContextSize,
            [out]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [out]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputContextStackTrace (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME  Frames,
            [in]  unsigned long  FramesSize,
            [in]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [in]  unsigned long  Flags
        );

        HRESULT GetStoredEventInformation (
            [out]  unsigned long*  Type,
            [out]  unsigned long*  ProcessId,
            [out]  unsigned long*  ThreadId,
            [out]  void*  Context,
            [in]  unsigned long  ContextSize,
            [out]  unsigned long*  ContextUsed,
            [in]  void*  ExtraInformation,
            [in]  unsigned long  ExtraInformationSize,
            [out]  unsigned long*  ExtraInformationUsed
        );

        HRESULT GetManagedStatus (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  char*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT GetManagedStatusWide (
            [out]  unsigned long*  Flags,
            [in]  unsigned long  WhichString,
            [out]  wchar_t*  String,
            [in]  unsigned long  StringSize,
            [out]  unsigned long*  StringNeeded
        );

        HRESULT ResetManagedStatus (
            [in]  unsigned long  Flags
        );

        HRESULT GetStackTraceEx (
            [in]  unsigned __int64  FrameOffset,
            [in]  unsigned __int64  StackOffset,
            [in]  unsigned __int64  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputStackTraceEx (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [in]  unsigned long  Flags
        );

        HRESULT GetContextStackTraceEx (
            [in]  void*  StartContext,
            [in]  unsigned long  StartContextSize,
            [out]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [out]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [out]  unsigned long*  FramesFilled
        );

        HRESULT OutputContextStackTraceEx (
            [in]  unsigned long  OutputControl,
            [in]  PDEBUG_STACK_FRAME_EX  Frames,
            [in]  unsigned long  FramesSize,
            [in]  void*  FrameContexts,
            [in]  unsigned long  FrameContextsSize,
            [in]  unsigned long  FrameContextsEntrySize,
            [in]  unsigned long  Flags
        );

        HRESULT GetBreakpointByGuid (
            [in]  LPGUID  Guid,
            [out]  PDEBUG_BREAKPOINT3*  Bp
        );

        HRESULT GetExecutionStatusEx (
            [out]  unsigned long*  Status
        );

        HRESULT GetSynchronizationStatus (
            [out]  unsigned long*  SendsAttempted,
            [out]  unsigned long*  SecondsSinceLastResponse
        );

        HRESULT GetDebuggeeType2 (
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Class,
            [out]  unsigned long*  Qualifier
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugDataSpaces
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(88f7dfab-3ea7-4c3a-aefb-c4e8106173aa),
        helpstring("IDebugDataSpaces")
    ]

    interface IDebugDataSpaces : IUnknown {

        HRESULT ReadVirtual (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtual (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT SearchVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Length,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [in]  unsigned long  PatternGranularity,
            [out]  unsigned __int64*  MatchOffset
        );

        HRESULT ReadVirtualUncached (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtualUncached (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadPointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [out]  unsigned __int64*  Ptrs
        );

        HRESULT WritePointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64*  Ptrs
        );

        HRESULT ReadPhysical (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WritePhysical (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadMsr (
            [in]  unsigned long  Msr,
            [out]  unsigned __int64*  Value
        );

        HRESULT WriteMsr (
            [in]  unsigned long  Msr,
            [in]  unsigned __int64  Value
        );

        HRESULT ReadBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT CheckLowMemory();

        HRESULT ReadDebuggerData (
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT ReadProcessorSystemData (
            [in]  unsigned long  Processor,
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugDataSpaces2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(7a5e852f-96e9-468f-ac1b-0b3addc4a049),
        helpstring("IDebugDataSpaces2")
    ]

    interface IDebugDataSpaces2 : IUnknown {

        HRESULT ReadVirtual (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtual (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT SearchVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Length,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [in]  unsigned long  PatternGranularity,
            [out]  unsigned __int64*  MatchOffset
        );

        HRESULT ReadVirtualUncached (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtualUncached (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadPointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [out]  unsigned __int64*  Ptrs
        );

        HRESULT WritePointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64*  Ptrs
        );

        HRESULT ReadPhysical (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WritePhysical (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadMsr (
            [in]  unsigned long  Msr,
            [out]  unsigned __int64*  Value
        );

        HRESULT WriteMsr (
            [in]  unsigned long  Msr,
            [in]  unsigned __int64  Value
        );

        HRESULT ReadBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT CheckLowMemory();

        HRESULT ReadDebuggerData (
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT ReadProcessorSystemData (
            [in]  unsigned long  Processor,
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT VirtualToPhysical (
            [in]  unsigned __int64  Virtual,
            [out]  unsigned __int64*  Physical
        );

        HRESULT GetVirtualTranslationPhysicalOffsets (
            [in]  unsigned __int64  Virtual,
            [out]  unsigned __int64*  Offsets,
            [in]  unsigned long  OffsetsSize,
            [out]  unsigned long*  Levels
        );

        HRESULT ReadHandleData (
            [in]  unsigned __int64  Handle,
            [in]  unsigned long  DataType,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT FillVirtual (
            [in]  unsigned __int64  Start,
            [in]  unsigned long  Size,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [out]  unsigned long*  Filled
        );

        HRESULT FillPhysical (
            [in]  unsigned __int64  Start,
            [in]  unsigned long  Size,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [out]  unsigned long*  Filled
        );

        HRESULT QueryVirtual (
            [in]  unsigned __int64  Offset,
            [out]  PMEMORY_BASIC_INFORMATION64  Info
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugDataSpaces3
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(23f79d6c-8aaf-4f7c-a607-9995f5407e63),
        helpstring("IDebugDataSpaces3")
    ]

    interface IDebugDataSpaces3 : IUnknown {

        HRESULT ReadVirtual (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtual (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT SearchVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Length,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [in]  unsigned long  PatternGranularity,
            [out]  unsigned __int64*  MatchOffset
        );

        HRESULT ReadVirtualUncached (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtualUncached (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadPointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [out]  unsigned __int64*  Ptrs
        );

        HRESULT WritePointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64*  Ptrs
        );

        HRESULT ReadPhysical (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WritePhysical (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadMsr (
            [in]  unsigned long  Msr,
            [out]  unsigned __int64*  Value
        );

        HRESULT WriteMsr (
            [in]  unsigned long  Msr,
            [in]  unsigned __int64  Value
        );

        HRESULT ReadBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT CheckLowMemory();

        HRESULT ReadDebuggerData (
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT ReadProcessorSystemData (
            [in]  unsigned long  Processor,
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT VirtualToPhysical (
            [in]  unsigned __int64  Virtual,
            [out]  unsigned __int64*  Physical
        );

        HRESULT GetVirtualTranslationPhysicalOffsets (
            [in]  unsigned __int64  Virtual,
            [out]  unsigned __int64*  Offsets,
            [in]  unsigned long  OffsetsSize,
            [out]  unsigned long*  Levels
        );

        HRESULT ReadHandleData (
            [in]  unsigned __int64  Handle,
            [in]  unsigned long  DataType,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT FillVirtual (
            [in]  unsigned __int64  Start,
            [in]  unsigned long  Size,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [out]  unsigned long*  Filled
        );

        HRESULT FillPhysical (
            [in]  unsigned __int64  Start,
            [in]  unsigned long  Size,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [out]  unsigned long*  Filled
        );

        HRESULT QueryVirtual (
            [in]  unsigned __int64  Offset,
            [out]  PMEMORY_BASIC_INFORMATION64  Info
        );

        HRESULT ReadImageNtHeaders (
            [in]  unsigned __int64  ImageBase,
            [out]  PIMAGE_NT_HEADERS64  Headers
        );

        HRESULT ReadTagged (
            [in]  LPGUID  Tag,
            [in]  unsigned long  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TotalSize
        );

        HRESULT StartEnumTagged (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextTagged (
            [in]  unsigned __int64  Handle,
            [out]  LPGUID  Tag,
            [out]  unsigned long*  Size
        );

        HRESULT EndEnumTagged (
            [in]  unsigned __int64  Handle
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugDataSpaces4
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(d98ada1f-29e9-4ef5-a6c0-e53349883212),
        helpstring("IDebugDataSpaces4")
    ]

    interface IDebugDataSpaces4 : IUnknown {

        HRESULT ReadVirtual (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtual (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT SearchVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Length,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [in]  unsigned long  PatternGranularity,
            [out]  unsigned __int64*  MatchOffset
        );

        HRESULT ReadVirtualUncached (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteVirtualUncached (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadPointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [out]  unsigned __int64*  Ptrs
        );

        HRESULT WritePointersVirtual (
            [in]  unsigned long  Count,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64*  Ptrs
        );

        HRESULT ReadPhysical (
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WritePhysical (
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteControl (
            [in]  unsigned long  Processor,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteIo (
            [in]  unsigned long  InterfaceType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  AddressSpace,
            [in]  unsigned __int64  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT ReadMsr (
            [in]  unsigned long  Msr,
            [out]  unsigned __int64*  Value
        );

        HRESULT WriteMsr (
            [in]  unsigned long  Msr,
            [in]  unsigned __int64  Value
        );

        HRESULT ReadBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteBusData (
            [in]  unsigned long  BusDataType,
            [in]  unsigned long  BusNumber,
            [in]  unsigned long  SlotNumber,
            [in]  unsigned long  Offset,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT CheckLowMemory();

        HRESULT ReadDebuggerData (
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT ReadProcessorSystemData (
            [in]  unsigned long  Processor,
            [in]  unsigned long  Index,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT VirtualToPhysical (
            [in]  unsigned __int64  Virtual,
            [out]  unsigned __int64*  Physical
        );

        HRESULT GetVirtualTranslationPhysicalOffsets (
            [in]  unsigned __int64  Virtual,
            [out]  unsigned __int64*  Offsets,
            [in]  unsigned long  OffsetsSize,
            [out]  unsigned long*  Levels
        );

        HRESULT ReadHandleData (
            [in]  unsigned __int64  Handle,
            [in]  unsigned long  DataType,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  DataSize
        );

        HRESULT FillVirtual (
            [in]  unsigned __int64  Start,
            [in]  unsigned long  Size,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [out]  unsigned long*  Filled
        );

        HRESULT FillPhysical (
            [in]  unsigned __int64  Start,
            [in]  unsigned long  Size,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [out]  unsigned long*  Filled
        );

        HRESULT QueryVirtual (
            [in]  unsigned __int64  Offset,
            [out]  PMEMORY_BASIC_INFORMATION64  Info
        );

        HRESULT ReadImageNtHeaders (
            [in]  unsigned __int64  ImageBase,
            [out]  PIMAGE_NT_HEADERS64  Headers
        );

        HRESULT ReadTagged (
            [in]  LPGUID  Tag,
            [in]  unsigned long  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  TotalSize
        );

        HRESULT StartEnumTagged (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextTagged (
            [in]  unsigned __int64  Handle,
            [out]  LPGUID  Tag,
            [out]  unsigned long*  Size
        );

        HRESULT EndEnumTagged (
            [in]  unsigned __int64  Handle
        );

        HRESULT GetOffsetInformation (
            [in]  unsigned long  Space,
            [in]  unsigned long  Which,
            [in]  unsigned __int64  Offset,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  InfoSize
        );

        HRESULT GetNextDifferentlyValidOffsetVirtual (
            [in]  unsigned __int64  Offset,
            [out]  unsigned __int64*  NextOffset
        );

        HRESULT GetValidRegionVirtual (
            [in]  unsigned __int64  Base,
            [in]  unsigned long  Size,
            [out]  unsigned __int64*  ValidBase,
            [out]  unsigned long*  ValidSize
        );

        HRESULT SearchVirtual2 (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Length,
            [in]  unsigned long  Flags,
            [in]  void*  Pattern,
            [in]  unsigned long  PatternSize,
            [in]  unsigned long  PatternGranularity,
            [out]  unsigned __int64*  MatchOffset
        );

        HRESULT ReadMultiByteStringVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  MaxBytes,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringBytes
        );

        HRESULT ReadMultiByteStringVirtualWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  MaxBytes,
            [in]  unsigned long  CodePage,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringBytes
        );

        HRESULT ReadUnicodeStringVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  MaxBytes,
            [in]  unsigned long  CodePage,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringBytes
        );

        HRESULT ReadUnicodeStringVirtualWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  MaxBytes,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringBytes
        );

        HRESULT ReadPhysical2 (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WritePhysical2 (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugEventCallbacks
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(337be28b-5036-4d72-b6bf-c45fbb9f2eaa),
        helpstring("IDebugEventCallbacks")
    ]

    interface IDebugEventCallbacks : IUnknown {

        HRESULT GetInterestMask (
            [out]  unsigned long*  Mask
        );

        HRESULT Breakpoint (
            [in]  PDEBUG_BREAKPOINT  Bp
        );

        HRESULT Exception (
            [in]  PEXCEPTION_RECORD64  Exception,
            [in]  unsigned long  FirstChance
        );

        HRESULT CreateThread (
            [in]  unsigned __int64  Handle,
            [in]  unsigned __int64  DataOffset,
            [in]  unsigned __int64  StartOffset
        );

        HRESULT ExitThread (
            [in]  unsigned long  ExitCode
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  ImageFileHandle,
            [in]  unsigned __int64  Handle,
            [in]  unsigned __int64  BaseOffset,
            [in]  unsigned long  ModuleSize,
            [in]  const char*  ModuleName,
            [in]  const char*  ImageName,
            [in]  unsigned long  CheckSum,
            [in]  unsigned long  TimeDateStamp,
            [in]  unsigned __int64  InitialThreadHandle,
            [in]  unsigned __int64  ThreadDataOffset,
            [in]  unsigned __int64  StartOffset
        );

        HRESULT ExitProcess (
            [in]  unsigned long  ExitCode
        );

        HRESULT LoadModule (
            [in]  unsigned __int64  ImageFileHandle,
            [in]  unsigned __int64  BaseOffset,
            [in]  unsigned long  ModuleSize,
            [in]  const char*  ModuleName,
            [in]  const char*  ImageName,
            [in]  unsigned long  CheckSum,
            [in]  unsigned long  TimeDateStamp
        );

        HRESULT UnloadModule (
            [in]  const char*  ImageBaseName,
            [in]  unsigned __int64  BaseOffset
        );

        HRESULT SystemError (
            [in]  unsigned long  Error,
            [in]  unsigned long  Level
        );

        HRESULT SessionStatus (
            [in]  unsigned long  Status
        );

        HRESULT ChangeDebuggeeState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument
        );

        HRESULT ChangeEngineState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument
        );

        HRESULT ChangeSymbolState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugEventCallbacksWide
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(0690e046-9c23-45ac-a04f-987ac29ad0d3),
        helpstring("IDebugEventCallbacksWide")
    ]

    interface IDebugEventCallbacksWide : IUnknown {

        HRESULT GetInterestMask (
            [out]  unsigned long*  Mask
        );

        HRESULT Breakpoint (
            [in]  PDEBUG_BREAKPOINT2  Bp
        );

        HRESULT Exception (
            [in]  PEXCEPTION_RECORD64  Exception,
            [in]  unsigned long  FirstChance
        );

        HRESULT CreateThread (
            [in]  unsigned __int64  Handle,
            [in]  unsigned __int64  DataOffset,
            [in]  unsigned __int64  StartOffset
        );

        HRESULT ExitThread (
            [in]  unsigned long  ExitCode
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  ImageFileHandle,
            [in]  unsigned __int64  Handle,
            [in]  unsigned __int64  BaseOffset,
            [in]  unsigned long  ModuleSize,
            [in]  const wchar_t*  ModuleName,
            [in]  const wchar_t*  ImageName,
            [in]  unsigned long  CheckSum,
            [in]  unsigned long  TimeDateStamp,
            [in]  unsigned __int64  InitialThreadHandle,
            [in]  unsigned __int64  ThreadDataOffset,
            [in]  unsigned __int64  StartOffset
        );

        HRESULT ExitProcess (
            [in]  unsigned long  ExitCode
        );

        HRESULT LoadModule (
            [in]  unsigned __int64  ImageFileHandle,
            [in]  unsigned __int64  BaseOffset,
            [in]  unsigned long  ModuleSize,
            [in]  const wchar_t*  ModuleName,
            [in]  const wchar_t*  ImageName,
            [in]  unsigned long  CheckSum,
            [in]  unsigned long  TimeDateStamp
        );

        HRESULT UnloadModule (
            [in]  const wchar_t*  ImageBaseName,
            [in]  unsigned __int64  BaseOffset
        );

        HRESULT SystemError (
            [in]  unsigned long  Error,
            [in]  unsigned long  Level
        );

        HRESULT SessionStatus (
            [in]  unsigned long  Status
        );

        HRESULT ChangeDebuggeeState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument
        );

        HRESULT ChangeEngineState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument
        );

        HRESULT ChangeSymbolState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugEventContextCallbacks
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(61a4905b-23f9-4247-b3c5-53d087529ab7),
        helpstring("IDebugEventContextCallbacks")
    ]

    interface IDebugEventContextCallbacks : IUnknown {

        HRESULT GetInterestMask (
            [out]  unsigned long*  Mask
        );

        HRESULT Breakpoint (
            [in]  PDEBUG_BREAKPOINT2  Bp,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT Exception (
            [in]  PEXCEPTION_RECORD64  Exception,
            [in]  unsigned long  FirstChance,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT CreateThread (
            [in]  unsigned __int64  Handle,
            [in]  unsigned __int64  DataOffset,
            [in]  unsigned __int64  StartOffset,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT ExitThread (
            [in]  unsigned long  ExitCode,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT CreateProcess (
            [in]  unsigned __int64  ImageFileHandle,
            [in]  unsigned __int64  Handle,
            [in]  unsigned __int64  BaseOffset,
            [in]  unsigned long  ModuleSize,
            [in]  const wchar_t*  ModuleName,
            [in]  const wchar_t*  ImageName,
            [in]  unsigned long  CheckSum,
            [in]  unsigned long  TimeDateStamp,
            [in]  unsigned __int64  InitialThreadHandle,
            [in]  unsigned __int64  ThreadDataOffset,
            [in]  unsigned __int64  StartOffset,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT ExitProcess (
            [in]  unsigned long  ExitCode,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT LoadModule (
            [in]  unsigned __int64  ImageFileHandle,
            [in]  unsigned __int64  BaseOffset,
            [in]  unsigned long  ModuleSize,
            [in]  const wchar_t*  ModuleName,
            [in]  const wchar_t*  ImageName,
            [in]  unsigned long  CheckSum,
            [in]  unsigned long  TimeDateStamp,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT UnloadModule (
            [in]  const wchar_t*  ImageBaseName,
            [in]  unsigned __int64  BaseOffset,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT SystemError (
            [in]  unsigned long  Error,
            [in]  unsigned long  Level,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT SessionStatus (
            [in]  unsigned long  Status
        );

        HRESULT ChangeDebuggeeState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT ChangeEngineState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument,
            [in]  void*  Context,
            [in]  unsigned long  ContextSize
        );

        HRESULT ChangeSymbolState (
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Argument
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugInputCallbacks
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(9f50e42c-f136-499e-9a97-73036c94ed2d),
        helpstring("IDebugInputCallbacks")
    ]

    interface IDebugInputCallbacks : IUnknown {

        HRESULT StartInput (
            [in]  unsigned long  BufferSize
        );

        HRESULT EndInput();

    };

    //----------------------------------------------------------------------
    //
    // IDebugOutputCallbacks
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(4bf58045-d654-4c40-b0af-683090f356dc),
        helpstring("IDebugOutputCallbacks")
    ]

    interface IDebugOutputCallbacks : IUnknown {

        HRESULT Output (
            [in]  unsigned long  Mask,
            [in]  const char*  Text
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugOutputCallbacksWide
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(4c7fd663-c394-4e26-8ef1-34ad5ed3764c),
        helpstring("IDebugOutputCallbacksWide")
    ]

    interface IDebugOutputCallbacksWide : IUnknown {

        HRESULT Output (
            [in]  unsigned long  Mask,
            [in]  const wchar_t*  Text
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugOutputCallbacks2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(67721fe9-56d2-4a44-a325-2b65513ce6eb),
        helpstring("IDebugOutputCallbacks2")
    ]

    interface IDebugOutputCallbacks2 : IUnknown {

        HRESULT Output (
            [in]  unsigned long  Mask,
            [in]  const char*  Text
        );

        HRESULT GetInterestMask (
            [out]  unsigned long*  Mask
        );

        HRESULT Output2 (
            [in]  unsigned long  Which,
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Arg,
            [in]  const wchar_t*  Text
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugRegisters
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(ce289126-9e84-45a7-937e-67bb18691493),
        helpstring("IDebugRegisters")
    ]

    interface IDebugRegisters : IUnknown {

        HRESULT GetNumberRegisters (
            [out]  unsigned long*  Number
        );

        HRESULT GetDescription (
            [in]  unsigned long  Register,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  PDEBUG_REGISTER_DESCRIPTION  Desc
        );

        HRESULT GetIndexByName (
            [in]  const char*  Name,
            [out]  unsigned long*  Index
        );

        HRESULT GetValue (
            [in]  unsigned long  Register,
            [out]  PDEBUG_VALUE  Value
        );

        HRESULT SetValue (
            [in]  unsigned long  Register,
            [in]  PDEBUG_VALUE  Value
        );

        HRESULT GetValues (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [out]  PDEBUG_VALUE  Values
        );

        HRESULT SetValues (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [in]  PDEBUG_VALUE  Values
        );

        HRESULT OutputRegisters (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT GetInstructionOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetStackOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetFrameOffset (
            [out]  unsigned __int64*  Offset
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugRegisters2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(1656afa9-19c6-4e3a-97e7-5dc9160cf9c4),
        helpstring("IDebugRegisters2")
    ]

    interface IDebugRegisters2 : IUnknown {

        HRESULT GetNumberRegisters (
            [out]  unsigned long*  Number
        );

        HRESULT GetDescription (
            [in]  unsigned long  Register,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  PDEBUG_REGISTER_DESCRIPTION  Desc
        );

        HRESULT GetIndexByName (
            [in]  const char*  Name,
            [out]  unsigned long*  Index
        );

        HRESULT GetValue (
            [in]  unsigned long  Register,
            [out]  PDEBUG_VALUE  Value
        );

        HRESULT SetValue (
            [in]  unsigned long  Register,
            [in]  PDEBUG_VALUE  Value
        );

        HRESULT GetValues (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [out]  PDEBUG_VALUE  Values
        );

        HRESULT SetValues (
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [in]  PDEBUG_VALUE  Values
        );

        HRESULT OutputRegisters (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags
        );

        HRESULT GetInstructionOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetStackOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetFrameOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetDescriptionWide (
            [in]  unsigned long  Register,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  PDEBUG_REGISTER_DESCRIPTION  Desc
        );

        HRESULT GetIndexByNameWide (
            [in]  const wchar_t*  Name,
            [out]  unsigned long*  Index
        );

        HRESULT GetNumberPseudoRegisters (
            [out]  unsigned long*  Number
        );

        HRESULT GetPseudoDescription (
            [in]  unsigned long  Register,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  TypeModule,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetPseudoDescriptionWide (
            [in]  unsigned long  Register,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  TypeModule,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetPseudoIndexByName (
            [in]  const char*  Name,
            [out]  unsigned long*  Index
        );

        HRESULT GetPseudoIndexByNameWide (
            [in]  const wchar_t*  Name,
            [out]  unsigned long*  Index
        );

        HRESULT GetPseudoValues (
            [in]  unsigned long  Source,
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [out]  PDEBUG_VALUE  Values
        );

        HRESULT SetPseudoValues (
            [in]  unsigned long  Source,
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [in]  PDEBUG_VALUE  Values
        );

        HRESULT GetValues2 (
            [in]  unsigned long  Source,
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [out]  PDEBUG_VALUE  Values
        );

        HRESULT SetValues2 (
            [in]  unsigned long  Source,
            [in]  unsigned long  Count,
            [in]  unsigned long*  Indices,
            [in]  unsigned long  Start,
            [in]  PDEBUG_VALUE  Values
        );

        HRESULT OutputRegisters2 (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Source,
            [in]  unsigned long  Flags
        );

        HRESULT GetInstructionOffset2 (
            [in]  unsigned long  Source,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetStackOffset2 (
            [in]  unsigned long  Source,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetFrameOffset2 (
            [in]  unsigned long  Source,
            [out]  unsigned __int64*  Offset
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSymbolGroup
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(f2528316-0f1a-4431-aeed-11d096e1e2ab),
        helpstring("IDebugSymbolGroup")
    ]

    interface IDebugSymbolGroup : IUnknown {

        HRESULT GetNumberSymbols (
            [out]  unsigned long*  Number
        );

        HRESULT AddSymbol (
            [in]  const char*  Name,
            [in]  unsigned long*  Index
        );

        HRESULT RemoveSymbolByName (
            [in]  const char*  Name
        );

        HRESULT RemoveSymbolByIndex (
            [in]  unsigned long  Index
        );

        HRESULT GetSymbolName (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetSymbolParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SYMBOL_PARAMETERS  Params
        );

        HRESULT ExpandSymbol (
            [in]  unsigned long  Index,
            [in]  BOOL  Expand
        );

        HRESULT OutputSymbols (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  unsigned long  Start,
            [in]  unsigned long  Count
        );

        HRESULT WriteSymbol (
            [in]  unsigned long  Index,
            [in]  const char*  Value
        );

        HRESULT OutputAsType (
            [in]  unsigned long  Index,
            [in]  const char*  Type
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSymbolGroup2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(6a7ccc5f-fb5e-4dcc-b41c-6c20307bccc7),
        helpstring("IDebugSymbolGroup2")
    ]

    interface IDebugSymbolGroup2 : IUnknown {

        HRESULT GetNumberSymbols (
            [out]  unsigned long*  Number
        );

        HRESULT AddSymbol (
            [in]  const char*  Name,
            [in]  unsigned long*  Index
        );

        HRESULT RemoveSymbolByName (
            [in]  const char*  Name
        );

        HRESULT RemoveSymbolByIndex (
            [in]  unsigned long  Index
        );

        HRESULT GetSymbolName (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetSymbolParameters (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  PDEBUG_SYMBOL_PARAMETERS  Params
        );

        HRESULT ExpandSymbol (
            [in]  unsigned long  Index,
            [in]  BOOL  Expand
        );

        HRESULT OutputSymbols (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  unsigned long  Start,
            [in]  unsigned long  Count
        );

        HRESULT WriteSymbol (
            [in]  unsigned long  Index,
            [in]  const char*  Value
        );

        HRESULT OutputAsType (
            [in]  unsigned long  Index,
            [in]  const char*  Type
        );

        HRESULT AddSymbolWide (
            [in]  const wchar_t*  Name,
            [in]  unsigned long*  Index
        );

        HRESULT RemoveSymbolByNameWide (
            [in]  const wchar_t*  Name
        );

        HRESULT GetSymbolNameWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT WriteSymbolWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Value
        );

        HRESULT OutputAsTypeWide (
            [in]  unsigned long  Index,
            [in]  const wchar_t*  Type
        );

        HRESULT GetSymbolTypeName (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetSymbolTypeNameWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetSymbolSize (
            [in]  unsigned long  Index,
            [out]  unsigned long*  Size
        );

        HRESULT GetSymbolOffset (
            [in]  unsigned long  Index,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetSymbolRegister (
            [in]  unsigned long  Index,
            [out]  unsigned long*  Register
        );

        HRESULT GetSymbolValueText (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetSymbolValueTextWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetSymbolEntryInformation (
            [in]  unsigned long  Index,
            [out]  PDEBUG_SYMBOL_ENTRY  Entry
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSymbols
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(8c31e98c-983a-48a5-9016-6fe5d667a950),
        helpstring("IDebugSymbols")
    ]

    interface IDebugSymbols : IUnknown {

        HRESULT GetSymbolOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffset (
            [in]  unsigned __int64  Offset,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByName (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffset (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  char*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNumberModules (
            [out]  unsigned long*  Loaded,
            [out]  unsigned long*  Unloaded
        );

        HRESULT GetModuleByIndex (
            [in]  unsigned long  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleNames (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  ImageNameBuffer,
            [in]  unsigned long  ImageNameBufferSize,
            [out]  unsigned long*  ImageNameSize,
            [out]  char*  ModuleNameBuffer,
            [in]  unsigned long  ModuleNameBufferSize,
            [out]  unsigned long*  ModuleNameSize,
            [out]  char*  LoadedImageNameBuffer,
            [in]  unsigned long  LoadedImageNameBufferSize,
            [out]  unsigned long*  LoadedImageNameSize
        );

        HRESULT GetModuleParameters (
            [in]  unsigned long  Count,
            [in]  unsigned __int64*  Bases,
            [in]  unsigned long  Start,
            [out]  PDEBUG_MODULE_PARAMETERS  Params
        );

        HRESULT GetSymbolModule (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeId (
            [in]  unsigned __int64  Module,
            [in]  const char*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetTypeSize (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  unsigned long*  Size
        );

        HRESULT GetFieldOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeId (
            [in]  const char*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetOffsetTypeId (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT ReadTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataVirtual (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT ReadTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataPhysical (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT GetScope (
            [out]  unsigned __int64*  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  ScopeFrame,
            [out]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT SetScope (
            [in]  unsigned __int64  InstructionOffset,
            [in]  PDEBUG_STACK_FRAME  ScopeFrame,
            [in]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT ResetScope();

        HRESULT GetScopeSymbolGroup (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP  Update,
            [out]  PDEBUG_SYMBOL_GROUP*  Symbols
        );

        HRESULT CreateSymbolGroup (
            [out]  PDEBUG_SYMBOL_GROUP*  Group
        );

        HRESULT StartSymbolMatch (
            [in]  const char*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatch (
            [in]  unsigned __int64  Handle,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT EndSymbolMatch (
            [in]  unsigned __int64  Handle
        );

        HRESULT Reload (
            [in]  const char*  Module
        );

        HRESULT GetSymbolPath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPath (
            [in]  const char*  Path
        );

        HRESULT AppendSymbolPath (
            [in]  const char*  Addition
        );

        HRESULT GetImagePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePath (
            [in]  const char*  Path
        );

        HRESULT AppendImagePath (
            [in]  const char*  Addition
        );

        HRESULT GetSourcePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElement (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePath (
            [in]  const char*  Path
        );

        HRESULT AppendSourcePath (
            [in]  const char*  Addition
        );

        HRESULT FindSourceFile (
            [in]  unsigned long  StartElement,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsets (
            [in]  const char*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSymbols2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(3a707211-afdd-4495-ad4f-56fecdf8163f),
        helpstring("IDebugSymbols2")
    ]

    interface IDebugSymbols2 : IUnknown {

        HRESULT GetSymbolOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffset (
            [in]  unsigned __int64  Offset,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByName (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffset (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  char*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNumberModules (
            [out]  unsigned long*  Loaded,
            [out]  unsigned long*  Unloaded
        );

        HRESULT GetModuleByIndex (
            [in]  unsigned long  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleNames (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  ImageNameBuffer,
            [in]  unsigned long  ImageNameBufferSize,
            [out]  unsigned long*  ImageNameSize,
            [out]  char*  ModuleNameBuffer,
            [in]  unsigned long  ModuleNameBufferSize,
            [out]  unsigned long*  ModuleNameSize,
            [out]  char*  LoadedImageNameBuffer,
            [in]  unsigned long  LoadedImageNameBufferSize,
            [out]  unsigned long*  LoadedImageNameSize
        );

        HRESULT GetModuleParameters (
            [in]  unsigned long  Count,
            [in]  unsigned __int64*  Bases,
            [in]  unsigned long  Start,
            [out]  PDEBUG_MODULE_PARAMETERS  Params
        );

        HRESULT GetSymbolModule (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeId (
            [in]  unsigned __int64  Module,
            [in]  const char*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetTypeSize (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  unsigned long*  Size
        );

        HRESULT GetFieldOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeId (
            [in]  const char*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetOffsetTypeId (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT ReadTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataVirtual (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT ReadTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataPhysical (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT GetScope (
            [out]  unsigned __int64*  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  ScopeFrame,
            [out]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT SetScope (
            [in]  unsigned __int64  InstructionOffset,
            [in]  PDEBUG_STACK_FRAME  ScopeFrame,
            [in]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT ResetScope();

        HRESULT GetScopeSymbolGroup (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP  Update,
            [out]  PDEBUG_SYMBOL_GROUP*  Symbols
        );

        HRESULT CreateSymbolGroup (
            [out]  PDEBUG_SYMBOL_GROUP*  Group
        );

        HRESULT StartSymbolMatch (
            [in]  const char*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatch (
            [in]  unsigned __int64  Handle,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT EndSymbolMatch (
            [in]  unsigned __int64  Handle
        );

        HRESULT Reload (
            [in]  const char*  Module
        );

        HRESULT GetSymbolPath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPath (
            [in]  const char*  Path
        );

        HRESULT AppendSymbolPath (
            [in]  const char*  Addition
        );

        HRESULT GetImagePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePath (
            [in]  const char*  Path
        );

        HRESULT AppendImagePath (
            [in]  const char*  Addition
        );

        HRESULT GetSourcePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElement (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePath (
            [in]  const char*  Path
        );

        HRESULT AppendSourcePath (
            [in]  const char*  Addition
        );

        HRESULT FindSourceFile (
            [in]  unsigned long  StartElement,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsets (
            [in]  const char*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

        HRESULT GetModuleVersionInformation (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [in]  const char*  Item,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  VerInfoSize
        );

        HRESULT GetModuleNameString (
            [in]  unsigned long  Which,
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetConstantName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned __int64  Value,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetFieldName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  FieldIndex,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetTypeOptions (
            [in]  unsigned long  Options
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSymbols3
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(f02fbecc-50ac-4f36-9ad9-c975e8f32ff8),
        helpstring("IDebugSymbols3")
    ]

    interface IDebugSymbols3 : IUnknown {

        HRESULT GetSymbolOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffset (
            [in]  unsigned __int64  Offset,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByName (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffset (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  char*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNumberModules (
            [out]  unsigned long*  Loaded,
            [out]  unsigned long*  Unloaded
        );

        HRESULT GetModuleByIndex (
            [in]  unsigned long  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleNames (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  ImageNameBuffer,
            [in]  unsigned long  ImageNameBufferSize,
            [out]  unsigned long*  ImageNameSize,
            [out]  char*  ModuleNameBuffer,
            [in]  unsigned long  ModuleNameBufferSize,
            [out]  unsigned long*  ModuleNameSize,
            [out]  char*  LoadedImageNameBuffer,
            [in]  unsigned long  LoadedImageNameBufferSize,
            [out]  unsigned long*  LoadedImageNameSize
        );

        HRESULT GetModuleParameters (
            [in]  unsigned long  Count,
            [in]  unsigned __int64*  Bases,
            [in]  unsigned long  Start,
            [out]  PDEBUG_MODULE_PARAMETERS  Params
        );

        HRESULT GetSymbolModule (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeId (
            [in]  unsigned __int64  Module,
            [in]  const char*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetTypeSize (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  unsigned long*  Size
        );

        HRESULT GetFieldOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeId (
            [in]  const char*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetOffsetTypeId (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT ReadTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataVirtual (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT ReadTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataPhysical (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT GetScope (
            [out]  unsigned __int64*  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  ScopeFrame,
            [out]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT SetScope (
            [in]  unsigned __int64  InstructionOffset,
            [in]  PDEBUG_STACK_FRAME  ScopeFrame,
            [in]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT ResetScope();

        HRESULT GetScopeSymbolGroup (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP  Update,
            [out]  PDEBUG_SYMBOL_GROUP*  Symbols
        );

        HRESULT CreateSymbolGroup (
            [out]  PDEBUG_SYMBOL_GROUP*  Group
        );

        HRESULT StartSymbolMatch (
            [in]  const char*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatch (
            [in]  unsigned __int64  Handle,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT EndSymbolMatch (
            [in]  unsigned __int64  Handle
        );

        HRESULT Reload (
            [in]  const char*  Module
        );

        HRESULT GetSymbolPath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPath (
            [in]  const char*  Path
        );

        HRESULT AppendSymbolPath (
            [in]  const char*  Addition
        );

        HRESULT GetImagePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePath (
            [in]  const char*  Path
        );

        HRESULT AppendImagePath (
            [in]  const char*  Addition
        );

        HRESULT GetSourcePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElement (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePath (
            [in]  const char*  Path
        );

        HRESULT AppendSourcePath (
            [in]  const char*  Addition
        );

        HRESULT FindSourceFile (
            [in]  unsigned long  StartElement,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsets (
            [in]  const char*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

        HRESULT GetModuleVersionInformation (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [in]  const char*  Item,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  VerInfoSize
        );

        HRESULT GetModuleNameString (
            [in]  unsigned long  Which,
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetConstantName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned __int64  Value,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetFieldName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  FieldIndex,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffsetWide (
            [in]  unsigned __int64  Offset,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByNameWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffsetWide (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffsetWide (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  wchar_t*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLineWide (
            [in]  unsigned long  Line,
            [in]  const wchar_t*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetModuleByModuleNameWide (
            [in]  const wchar_t*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetSymbolModuleWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeIdWide (
            [in]  unsigned __int64  Module,
            [in]  const wchar_t*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetFieldOffsetWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const wchar_t*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeIdWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetScopeSymbolGroup2 (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP2  Update,
            [out]  PDEBUG_SYMBOL_GROUP2*  Symbols
        );

        HRESULT CreateSymbolGroup2 (
            [out]  PDEBUG_SYMBOL_GROUP2*  Group
        );

        HRESULT StartSymbolMatchWide (
            [in]  const wchar_t*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatchWide (
            [in]  unsigned __int64  Handle,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT ReloadWide (
            [in]  const wchar_t*  Module
        );

        HRESULT GetSymbolPathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendSymbolPathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT GetImagePathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendImagePathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT GetSourcePathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElementWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendSourcePathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT FindSourceFileWide (
            [in]  unsigned long  StartElement,
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsetsWide (
            [in]  const wchar_t*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

        HRESULT GetModuleVersionInformationWide (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [in]  const wchar_t*  Item,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  VerInfoSize
        );

        HRESULT GetModuleNameStringWide (
            [in]  unsigned long  Which,
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetConstantNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned __int64  Value,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetFieldNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  FieldIndex,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT IsManagedModule (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base
        );

        HRESULT GetModuleByModuleName2 (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName2Wide (
            [in]  const wchar_t*  Name,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset2 (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT AddSyntheticModule (
            [in]  unsigned __int64  Base,
            [in]  unsigned long  Size,
            [in]  const char*  ImagePath,
            [in]  const char*  ModuleName,
            [in]  unsigned long  Flags
        );

        HRESULT AddSyntheticModuleWide (
            [in]  unsigned __int64  Base,
            [in]  unsigned long  Size,
            [in]  const wchar_t*  ImagePath,
            [in]  const wchar_t*  ModuleName,
            [in]  unsigned long  Flags
        );

        HRESULT RemoveSyntheticModule (
            [in]  unsigned __int64  Base
        );

        HRESULT GetCurrentScopeFrameIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetScopeFrameByIndex (
            [in]  unsigned long  Index
        );

        HRESULT SetScopeFromJitDebugInfo (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  InfoOffset
        );

        HRESULT SetScopeFromStoredEvent();

        HRESULT OutputSymbolByOffset (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Offset
        );

        HRESULT GetFunctionEntryByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BufferNeeded
        );

        HRESULT GetFieldTypeAndOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  ContainerTypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  FieldTypeId,
            [out]  unsigned long*  Offset
        );

        HRESULT GetFieldTypeAndOffsetWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  ContainerTypeId,
            [in]  const wchar_t*  Field,
            [out]  unsigned long*  FieldTypeId,
            [out]  unsigned long*  Offset
        );

        HRESULT AddSyntheticSymbol (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Size,
            [in]  const char*  Name,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT AddSyntheticSymbolWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Size,
            [in]  const wchar_t*  Name,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT RemoveSyntheticSymbol (
            [in]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT GetSymbolEntriesByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [out]  unsigned __int64*  Displacements,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntriesByName (
            [in]  const char*  Symbol,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntriesByNameWide (
            [in]  const wchar_t*  Symbol,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntryByToken (
            [in]  unsigned __int64  ModuleBase,
            [in]  unsigned long  Token,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT GetSymbolEntryInformation (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [out]  PDEBUG_SYMBOL_ENTRY  Info
        );

        HRESULT GetSymbolEntryString (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSymbolEntryStringWide (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSymbolEntryOffsetRegions (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_OFFSET_REGION  Regions,
            [in]  unsigned long  RegionsCount,
            [out]  unsigned long*  RegionsAvail
        );

        HRESULT GetSymbolEntryBySymbolEntry (
            [in]  PDEBUG_MODULE_AND_ID  FromId,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  ToId
        );

        HRESULT GetSourceEntriesByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntriesByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntriesByLineWide (
            [in]  unsigned long  Line,
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntryString (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSourceEntryStringWide (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSourceEntryOffsetRegions (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_OFFSET_REGION  Regions,
            [in]  unsigned long  RegionsCount,
            [out]  unsigned long*  RegionsAvail
        );

        HRESULT GetSourceEntryBySourceEntry (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  FromEntry,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  ToEntry
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSymbols4
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(e391bbd8-9d8c-4418-840b-c006592a1752),
        helpstring("IDebugSymbols4")
    ]

    interface IDebugSymbols4 : IUnknown {

        HRESULT GetSymbolOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffset (
            [in]  unsigned __int64  Offset,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByName (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffset (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  char*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNumberModules (
            [out]  unsigned long*  Loaded,
            [out]  unsigned long*  Unloaded
        );

        HRESULT GetModuleByIndex (
            [in]  unsigned long  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleNames (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  ImageNameBuffer,
            [in]  unsigned long  ImageNameBufferSize,
            [out]  unsigned long*  ImageNameSize,
            [out]  char*  ModuleNameBuffer,
            [in]  unsigned long  ModuleNameBufferSize,
            [out]  unsigned long*  ModuleNameSize,
            [out]  char*  LoadedImageNameBuffer,
            [in]  unsigned long  LoadedImageNameBufferSize,
            [out]  unsigned long*  LoadedImageNameSize
        );

        HRESULT GetModuleParameters (
            [in]  unsigned long  Count,
            [in]  unsigned __int64*  Bases,
            [in]  unsigned long  Start,
            [out]  PDEBUG_MODULE_PARAMETERS  Params
        );

        HRESULT GetSymbolModule (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeId (
            [in]  unsigned __int64  Module,
            [in]  const char*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetTypeSize (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  unsigned long*  Size
        );

        HRESULT GetFieldOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeId (
            [in]  const char*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetOffsetTypeId (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT ReadTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataVirtual (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT ReadTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataPhysical (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT GetScope (
            [out]  unsigned __int64*  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  ScopeFrame,
            [out]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT SetScope (
            [in]  unsigned __int64  InstructionOffset,
            [in]  PDEBUG_STACK_FRAME  ScopeFrame,
            [in]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT ResetScope();

        HRESULT GetScopeSymbolGroup (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP  Update,
            [out]  PDEBUG_SYMBOL_GROUP*  Symbols
        );

        HRESULT CreateSymbolGroup (
            [out]  PDEBUG_SYMBOL_GROUP*  Group
        );

        HRESULT StartSymbolMatch (
            [in]  const char*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatch (
            [in]  unsigned __int64  Handle,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT EndSymbolMatch (
            [in]  unsigned __int64  Handle
        );

        HRESULT Reload (
            [in]  const char*  Module
        );

        HRESULT GetSymbolPath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPath (
            [in]  const char*  Path
        );

        HRESULT AppendSymbolPath (
            [in]  const char*  Addition
        );

        HRESULT GetImagePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePath (
            [in]  const char*  Path
        );

        HRESULT AppendImagePath (
            [in]  const char*  Addition
        );

        HRESULT GetSourcePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElement (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePath (
            [in]  const char*  Path
        );

        HRESULT AppendSourcePath (
            [in]  const char*  Addition
        );

        HRESULT FindSourceFile (
            [in]  unsigned long  StartElement,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsets (
            [in]  const char*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

        HRESULT GetModuleVersionInformation (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [in]  const char*  Item,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  VerInfoSize
        );

        HRESULT GetModuleNameString (
            [in]  unsigned long  Which,
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetConstantName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned __int64  Value,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetFieldName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  FieldIndex,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffsetWide (
            [in]  unsigned __int64  Offset,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByNameWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffsetWide (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffsetWide (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  wchar_t*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLineWide (
            [in]  unsigned long  Line,
            [in]  const wchar_t*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetModuleByModuleNameWide (
            [in]  const wchar_t*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetSymbolModuleWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeIdWide (
            [in]  unsigned __int64  Module,
            [in]  const wchar_t*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetFieldOffsetWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const wchar_t*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeIdWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetScopeSymbolGroup2 (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP2  Update,
            [out]  PDEBUG_SYMBOL_GROUP2*  Symbols
        );

        HRESULT CreateSymbolGroup2 (
            [out]  PDEBUG_SYMBOL_GROUP2*  Group
        );

        HRESULT StartSymbolMatchWide (
            [in]  const wchar_t*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatchWide (
            [in]  unsigned __int64  Handle,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT ReloadWide (
            [in]  const wchar_t*  Module
        );

        HRESULT GetSymbolPathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendSymbolPathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT GetImagePathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendImagePathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT GetSourcePathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElementWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendSourcePathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT FindSourceFileWide (
            [in]  unsigned long  StartElement,
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsetsWide (
            [in]  const wchar_t*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

        HRESULT GetModuleVersionInformationWide (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [in]  const wchar_t*  Item,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  VerInfoSize
        );

        HRESULT GetModuleNameStringWide (
            [in]  unsigned long  Which,
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetConstantNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned __int64  Value,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetFieldNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  FieldIndex,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT IsManagedModule (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base
        );

        HRESULT GetModuleByModuleName2 (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName2Wide (
            [in]  const wchar_t*  Name,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset2 (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT AddSyntheticModule (
            [in]  unsigned __int64  Base,
            [in]  unsigned long  Size,
            [in]  const char*  ImagePath,
            [in]  const char*  ModuleName,
            [in]  unsigned long  Flags
        );

        HRESULT AddSyntheticModuleWide (
            [in]  unsigned __int64  Base,
            [in]  unsigned long  Size,
            [in]  const wchar_t*  ImagePath,
            [in]  const wchar_t*  ModuleName,
            [in]  unsigned long  Flags
        );

        HRESULT RemoveSyntheticModule (
            [in]  unsigned __int64  Base
        );

        HRESULT GetCurrentScopeFrameIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetScopeFrameByIndex (
            [in]  unsigned long  Index
        );

        HRESULT SetScopeFromJitDebugInfo (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  InfoOffset
        );

        HRESULT SetScopeFromStoredEvent();

        HRESULT OutputSymbolByOffset (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Offset
        );

        HRESULT GetFunctionEntryByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BufferNeeded
        );

        HRESULT GetFieldTypeAndOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  ContainerTypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  FieldTypeId,
            [out]  unsigned long*  Offset
        );

        HRESULT GetFieldTypeAndOffsetWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  ContainerTypeId,
            [in]  const wchar_t*  Field,
            [out]  unsigned long*  FieldTypeId,
            [out]  unsigned long*  Offset
        );

        HRESULT AddSyntheticSymbol (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Size,
            [in]  const char*  Name,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT AddSyntheticSymbolWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Size,
            [in]  const wchar_t*  Name,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT RemoveSyntheticSymbol (
            [in]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT GetSymbolEntriesByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [out]  unsigned __int64*  Displacements,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntriesByName (
            [in]  const char*  Symbol,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntriesByNameWide (
            [in]  const wchar_t*  Symbol,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntryByToken (
            [in]  unsigned __int64  ModuleBase,
            [in]  unsigned long  Token,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT GetSymbolEntryInformation (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [out]  PDEBUG_SYMBOL_ENTRY  Info
        );

        HRESULT GetSymbolEntryString (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSymbolEntryStringWide (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSymbolEntryOffsetRegions (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_OFFSET_REGION  Regions,
            [in]  unsigned long  RegionsCount,
            [out]  unsigned long*  RegionsAvail
        );

        HRESULT GetSymbolEntryBySymbolEntry (
            [in]  PDEBUG_MODULE_AND_ID  FromId,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  ToId
        );

        HRESULT GetSourceEntriesByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntriesByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntriesByLineWide (
            [in]  unsigned long  Line,
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntryString (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSourceEntryStringWide (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSourceEntryOffsetRegions (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_OFFSET_REGION  Regions,
            [in]  unsigned long  RegionsCount,
            [out]  unsigned long*  RegionsAvail
        );

        HRESULT GetSourceEntryBySourceEntry (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  FromEntry,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  ToEntry
        );

        HRESULT GetScopeEx (
            [out]  unsigned __int64*  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME_EX  ScopeFrame,
            [out]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT SetScopeEx (
            [in]  unsigned __int64  InstructionOffset,
            [in]  PDEBUG_STACK_FRAME_EX  ScopeFrame,
            [in]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT GetNameByInlineContext (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetNameByInlineContextWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByInlineContext (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  unsigned long*  Line,
            [out]  char*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByInlineContextWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  unsigned long*  Line,
            [out]  wchar_t*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT OutputSymbolByInlineContext (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSymbols5
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(c65fa83e-1e69-475e-8e0e-b5d79e9cc17e),
        helpstring("IDebugSymbols5")
    ]

    interface IDebugSymbols5 : IUnknown {

        HRESULT GetSymbolOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetSymbolOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffset (
            [in]  unsigned __int64  Offset,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByName (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffset (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  char*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNumberModules (
            [out]  unsigned long*  Loaded,
            [out]  unsigned long*  Unloaded
        );

        HRESULT GetModuleByIndex (
            [in]  unsigned long  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleNames (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  ImageNameBuffer,
            [in]  unsigned long  ImageNameBufferSize,
            [out]  unsigned long*  ImageNameSize,
            [out]  char*  ModuleNameBuffer,
            [in]  unsigned long  ModuleNameBufferSize,
            [out]  unsigned long*  ModuleNameSize,
            [out]  char*  LoadedImageNameBuffer,
            [in]  unsigned long  LoadedImageNameBufferSize,
            [out]  unsigned long*  LoadedImageNameSize
        );

        HRESULT GetModuleParameters (
            [in]  unsigned long  Count,
            [in]  unsigned __int64*  Bases,
            [in]  unsigned long  Start,
            [out]  PDEBUG_MODULE_PARAMETERS  Params
        );

        HRESULT GetSymbolModule (
            [in]  const char*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeId (
            [in]  unsigned __int64  Module,
            [in]  const char*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetTypeSize (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  unsigned long*  Size
        );

        HRESULT GetFieldOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeId (
            [in]  const char*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetOffsetTypeId (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT ReadTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataVirtual (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataVirtual (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT ReadTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesRead
        );

        HRESULT WriteTypedDataPhysical (
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BytesWritten
        );

        HRESULT OutputTypedDataPhysical (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  Offset,
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  Flags
        );

        HRESULT GetScope (
            [out]  unsigned __int64*  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME  ScopeFrame,
            [out]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT SetScope (
            [in]  unsigned __int64  InstructionOffset,
            [in]  PDEBUG_STACK_FRAME  ScopeFrame,
            [in]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT ResetScope();

        HRESULT GetScopeSymbolGroup (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP  Update,
            [out]  PDEBUG_SYMBOL_GROUP*  Symbols
        );

        HRESULT CreateSymbolGroup (
            [out]  PDEBUG_SYMBOL_GROUP*  Group
        );

        HRESULT StartSymbolMatch (
            [in]  const char*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatch (
            [in]  unsigned __int64  Handle,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT EndSymbolMatch (
            [in]  unsigned __int64  Handle
        );

        HRESULT Reload (
            [in]  const char*  Module
        );

        HRESULT GetSymbolPath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPath (
            [in]  const char*  Path
        );

        HRESULT AppendSymbolPath (
            [in]  const char*  Addition
        );

        HRESULT GetImagePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePath (
            [in]  const char*  Path
        );

        HRESULT AppendImagePath (
            [in]  const char*  Addition
        );

        HRESULT GetSourcePath (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElement (
            [in]  unsigned long  Index,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePath (
            [in]  const char*  Path
        );

        HRESULT AppendSourcePath (
            [in]  const char*  Addition
        );

        HRESULT FindSourceFile (
            [in]  unsigned long  StartElement,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsets (
            [in]  const char*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

        HRESULT GetModuleVersionInformation (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [in]  const char*  Item,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  VerInfoSize
        );

        HRESULT GetModuleNameString (
            [in]  unsigned long  Which,
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetConstantName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned __int64  Value,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetFieldName (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  FieldIndex,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeOptions (
            [out]  unsigned long*  Options
        );

        HRESULT AddTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT RemoveTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT SetTypeOptions (
            [in]  unsigned long  Options
        );

        HRESULT GetNameByOffsetWide (
            [in]  unsigned __int64  Offset,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByNameWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetNearNameByOffsetWide (
            [in]  unsigned __int64  Offset,
            [in]  LONG  Delta,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByOffsetWide (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Line,
            [out]  wchar_t*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetOffsetByLineWide (
            [in]  unsigned long  Line,
            [in]  const wchar_t*  File,
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetModuleByModuleNameWide (
            [in]  const wchar_t*  Name,
            [in]  unsigned long  StartIndex,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetSymbolModuleWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetTypeNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetTypeIdWide (
            [in]  unsigned __int64  Module,
            [in]  const wchar_t*  Name,
            [out]  unsigned long*  TypeId
        );

        HRESULT GetFieldOffsetWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  const wchar_t*  Field,
            [out]  unsigned long*  Offset
        );

        HRESULT GetSymbolTypeIdWide (
            [in]  const wchar_t*  Symbol,
            [out]  unsigned long*  TypeId,
            [out]  unsigned __int64*  Module
        );

        HRESULT GetScopeSymbolGroup2 (
            [in]  unsigned long  Flags,
            [in]  PDEBUG_SYMBOL_GROUP2  Update,
            [out]  PDEBUG_SYMBOL_GROUP2*  Symbols
        );

        HRESULT CreateSymbolGroup2 (
            [out]  PDEBUG_SYMBOL_GROUP2*  Group
        );

        HRESULT StartSymbolMatchWide (
            [in]  const wchar_t*  Pattern,
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetNextSymbolMatchWide (
            [in]  unsigned __int64  Handle,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  MatchSize,
            [out]  unsigned __int64*  Offset
        );

        HRESULT ReloadWide (
            [in]  const wchar_t*  Module
        );

        HRESULT GetSymbolPathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetSymbolPathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendSymbolPathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT GetImagePathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT SetImagePathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendImagePathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT GetSourcePathWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  PathSize
        );

        HRESULT GetSourcePathElementWide (
            [in]  unsigned long  Index,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ElementSize
        );

        HRESULT SetSourcePathWide (
            [in]  const wchar_t*  Path
        );

        HRESULT AppendSourcePathWide (
            [in]  const wchar_t*  Addition
        );

        HRESULT FindSourceFileWide (
            [in]  unsigned long  StartElement,
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  FoundElement,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  FoundSize
        );

        HRESULT GetSourceFileLineOffsetsWide (
            [in]  const wchar_t*  File,
            [out]  unsigned __int64*  Buffer,
            [in]  unsigned long  BufferLines,
            [out]  unsigned long*  FileLines
        );

        HRESULT GetModuleVersionInformationWide (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [in]  const wchar_t*  Item,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  VerInfoSize
        );

        HRESULT GetModuleNameStringWide (
            [in]  unsigned long  Which,
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetConstantNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned __int64  Value,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetFieldNameWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  TypeId,
            [in]  unsigned long  FieldIndex,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT IsManagedModule (
            [in]  unsigned long  Index,
            [in]  unsigned __int64  Base
        );

        HRESULT GetModuleByModuleName2 (
            [in]  const char*  Name,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByModuleName2Wide (
            [in]  const wchar_t*  Name,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT GetModuleByOffset2 (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  StartIndex,
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index,
            [out]  unsigned __int64*  Base
        );

        HRESULT AddSyntheticModule (
            [in]  unsigned __int64  Base,
            [in]  unsigned long  Size,
            [in]  const char*  ImagePath,
            [in]  const char*  ModuleName,
            [in]  unsigned long  Flags
        );

        HRESULT AddSyntheticModuleWide (
            [in]  unsigned __int64  Base,
            [in]  unsigned long  Size,
            [in]  const wchar_t*  ImagePath,
            [in]  const wchar_t*  ModuleName,
            [in]  unsigned long  Flags
        );

        HRESULT RemoveSyntheticModule (
            [in]  unsigned __int64  Base
        );

        HRESULT GetCurrentScopeFrameIndex (
            [out]  unsigned long*  Index
        );

        HRESULT SetScopeFrameByIndex (
            [in]  unsigned long  Index
        );

        HRESULT SetScopeFromJitDebugInfo (
            [in]  unsigned long  OutputControl,
            [in]  unsigned __int64  InfoOffset
        );

        HRESULT SetScopeFromStoredEvent();

        HRESULT OutputSymbolByOffset (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Offset
        );

        HRESULT GetFunctionEntryByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  void*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  BufferNeeded
        );

        HRESULT GetFieldTypeAndOffset (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  ContainerTypeId,
            [in]  const char*  Field,
            [out]  unsigned long*  FieldTypeId,
            [out]  unsigned long*  Offset
        );

        HRESULT GetFieldTypeAndOffsetWide (
            [in]  unsigned __int64  Module,
            [in]  unsigned long  ContainerTypeId,
            [in]  const wchar_t*  Field,
            [out]  unsigned long*  FieldTypeId,
            [out]  unsigned long*  Offset
        );

        HRESULT AddSyntheticSymbol (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Size,
            [in]  const char*  Name,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT AddSyntheticSymbolWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Size,
            [in]  const wchar_t*  Name,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT RemoveSyntheticSymbol (
            [in]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT GetSymbolEntriesByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [out]  unsigned __int64*  Displacements,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntriesByName (
            [in]  const char*  Symbol,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntriesByNameWide (
            [in]  const wchar_t*  Symbol,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  Ids,
            [in]  unsigned long  IdsCount,
            [out]  unsigned long*  Entries
        );

        HRESULT GetSymbolEntryByToken (
            [in]  unsigned __int64  ModuleBase,
            [in]  unsigned long  Token,
            [out]  PDEBUG_MODULE_AND_ID  Id
        );

        HRESULT GetSymbolEntryInformation (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [out]  PDEBUG_SYMBOL_ENTRY  Info
        );

        HRESULT GetSymbolEntryString (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSymbolEntryStringWide (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSymbolEntryOffsetRegions (
            [in]  PDEBUG_MODULE_AND_ID  Id,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_OFFSET_REGION  Regions,
            [in]  unsigned long  RegionsCount,
            [out]  unsigned long*  RegionsAvail
        );

        HRESULT GetSymbolEntryBySymbolEntry (
            [in]  PDEBUG_MODULE_AND_ID  FromId,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_MODULE_AND_ID  ToId
        );

        HRESULT GetSourceEntriesByOffset (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntriesByLine (
            [in]  unsigned long  Line,
            [in]  const char*  File,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntriesByLineWide (
            [in]  unsigned long  Line,
            [in]  const wchar_t*  File,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entries,
            [in]  unsigned long  EntriesCount,
            [out]  unsigned long*  EntriesAvail
        );

        HRESULT GetSourceEntryString (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Which,
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSourceEntryStringWide (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Which,
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  StringSize
        );

        HRESULT GetSourceEntryOffsetRegions (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  Entry,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_OFFSET_REGION  Regions,
            [in]  unsigned long  RegionsCount,
            [out]  unsigned long*  RegionsAvail
        );

        HRESULT GetSourceEntryBySourceEntry (
            [in]  PDEBUG_SYMBOL_SOURCE_ENTRY  FromEntry,
            [in]  unsigned long  Flags,
            [out]  PDEBUG_SYMBOL_SOURCE_ENTRY  ToEntry
        );

        HRESULT GetScopeEx (
            [out]  unsigned __int64*  InstructionOffset,
            [out]  PDEBUG_STACK_FRAME_EX  ScopeFrame,
            [out]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT SetScopeEx (
            [in]  unsigned __int64  InstructionOffset,
            [in]  PDEBUG_STACK_FRAME_EX  ScopeFrame,
            [in]  void*  ScopeContext,
            [in]  unsigned long  ScopeContextSize
        );

        HRESULT GetNameByInlineContext (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  char*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetNameByInlineContextWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  wchar_t*  NameBuffer,
            [in]  unsigned long  NameBufferSize,
            [out]  unsigned long*  NameSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByInlineContext (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  unsigned long*  Line,
            [out]  char*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT GetLineByInlineContextWide (
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext,
            [out]  unsigned long*  Line,
            [out]  wchar_t*  FileBuffer,
            [in]  unsigned long  FileBufferSize,
            [out]  unsigned long*  FileSize,
            [out]  unsigned __int64*  Displacement
        );

        HRESULT OutputSymbolByInlineContext (
            [in]  unsigned long  OutputControl,
            [in]  unsigned long  Flags,
            [in]  unsigned __int64  Offset,
            [in]  unsigned long  InlineContext
        );

        HRESULT GetCurrentScopeFrameIndexEx (
            [in]  unsigned long  Flags,
            [out]  unsigned long*  Index
        );

        HRESULT SetScopeFrameByIndexEx (
            [in]  unsigned long  Flags,
            [in]  unsigned long  Index
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSystemObjects
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(6b86fe2c-2c4f-4f0c-9da2-174311acc327),
        helpstring("IDebugSystemObjects")
    ]

    interface IDebugSystemObjects : IUnknown {

        HRESULT GetEventThread (
            [out]  unsigned long*  Id
        );

        HRESULT GetEventProcess (
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentThreadId (
            [in]  unsigned long  Id
        );

        HRESULT GetCurrentProcessId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentProcessId (
            [in]  unsigned long  Id
        );

        HRESULT GetNumberThreads (
            [out]  unsigned long*  Number
        );

        HRESULT GetTotalNumberThreads (
            [out]  unsigned long*  Total,
            [out]  unsigned long*  LargestProcess
        );

        HRESULT GetThreadIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetThreadIdByProcessor (
            [in]  unsigned long  Processor,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadTeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByTeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetThreadIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetThreadIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetNumberProcesses (
            [out]  unsigned long*  Number
        );

        HRESULT GetProcessIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetCurrentProcessDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessPeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByPeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetProcessIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetProcessIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessExecutableName (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExeSize
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSystemObjects2
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(0ae9f5ff-1852-4679-b055-494bee6407ee),
        helpstring("IDebugSystemObjects2")
    ]

    interface IDebugSystemObjects2 : IUnknown {

        HRESULT GetEventThread (
            [out]  unsigned long*  Id
        );

        HRESULT GetEventProcess (
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentThreadId (
            [in]  unsigned long  Id
        );

        HRESULT GetCurrentProcessId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentProcessId (
            [in]  unsigned long  Id
        );

        HRESULT GetNumberThreads (
            [out]  unsigned long*  Number
        );

        HRESULT GetTotalNumberThreads (
            [out]  unsigned long*  Total,
            [out]  unsigned long*  LargestProcess
        );

        HRESULT GetThreadIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetThreadIdByProcessor (
            [in]  unsigned long  Processor,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadTeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByTeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetThreadIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetThreadIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetNumberProcesses (
            [out]  unsigned long*  Number
        );

        HRESULT GetProcessIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetCurrentProcessDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessPeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByPeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetProcessIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetProcessIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessExecutableName (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExeSize
        );

        HRESULT GetCurrentProcessUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetImplicitThreadDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetImplicitThreadDataOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetImplicitProcessDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetImplicitProcessDataOffset (
            [in]  unsigned __int64  Offset
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSystemObjects3
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(e9676e2f-e286-4ea3-b0f9-dfe5d9fc330e),
        helpstring("IDebugSystemObjects3")
    ]

    interface IDebugSystemObjects3 : IUnknown {

        HRESULT GetEventThread (
            [out]  unsigned long*  Id
        );

        HRESULT GetEventProcess (
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentThreadId (
            [in]  unsigned long  Id
        );

        HRESULT GetCurrentProcessId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentProcessId (
            [in]  unsigned long  Id
        );

        HRESULT GetNumberThreads (
            [out]  unsigned long*  Number
        );

        HRESULT GetTotalNumberThreads (
            [out]  unsigned long*  Total,
            [out]  unsigned long*  LargestProcess
        );

        HRESULT GetThreadIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetThreadIdByProcessor (
            [in]  unsigned long  Processor,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadTeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByTeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetThreadIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetThreadIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetNumberProcesses (
            [out]  unsigned long*  Number
        );

        HRESULT GetProcessIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetCurrentProcessDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessPeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByPeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetProcessIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetProcessIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessExecutableName (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExeSize
        );

        HRESULT GetCurrentProcessUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetImplicitThreadDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetImplicitThreadDataOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetImplicitProcessDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetImplicitProcessDataOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetEventSystem (
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentSystemId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentSystemId (
            [in]  unsigned long  Id
        );

        HRESULT GetNumberSystems (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids
        );

        HRESULT GetTotalNumberThreadsAndProcesses (
            [out]  unsigned long*  TotalThreads,
            [out]  unsigned long*  TotalProcesses,
            [out]  unsigned long*  LargestProcessThreads,
            [out]  unsigned long*  LargestSystemThreads,
            [out]  unsigned long*  LargestSystemProcesses
        );

        HRESULT GetCurrentSystemServer (
            [out]  unsigned __int64*  Server
        );

        HRESULT GetSystemByServer (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentSystemServerName (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

    };

    //----------------------------------------------------------------------
    //
    // IDebugSystemObjects4
    //
    //----------------------------------------------------------------------

    [
        object,
        uuid(489468e6-7d0f-4af5-87ab-25207454d553),
        helpstring("IDebugSystemObjects4")
    ]

    interface IDebugSystemObjects4 : IUnknown {

        HRESULT GetEventThread (
            [out]  unsigned long*  Id
        );

        HRESULT GetEventProcess (
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentThreadId (
            [in]  unsigned long  Id
        );

        HRESULT GetCurrentProcessId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentProcessId (
            [in]  unsigned long  Id
        );

        HRESULT GetNumberThreads (
            [out]  unsigned long*  Number
        );

        HRESULT GetTotalNumberThreads (
            [out]  unsigned long*  Total,
            [out]  unsigned long*  LargestProcess
        );

        HRESULT GetThreadIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetThreadIdByProcessor (
            [in]  unsigned long  Processor,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadTeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetThreadIdByTeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetThreadIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentThreadHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetThreadIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetNumberProcesses (
            [out]  unsigned long*  Number
        );

        HRESULT GetProcessIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids,
            [out]  unsigned long*  SysIds
        );

        HRESULT GetCurrentProcessDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByDataOffset (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessPeb (
            [out]  unsigned __int64*  Offset
        );

        HRESULT GetProcessIdByPeb (
            [in]  unsigned __int64  Offset,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessSystemId (
            [out]  unsigned long*  SysId
        );

        HRESULT GetProcessIdBySystemId (
            [in]  unsigned long  SysId,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessHandle (
            [out]  unsigned __int64*  Handle
        );

        HRESULT GetProcessIdByHandle (
            [in]  unsigned __int64  Handle,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentProcessExecutableName (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExeSize
        );

        HRESULT GetCurrentProcessUpTime (
            [out]  unsigned long*  UpTime
        );

        HRESULT GetImplicitThreadDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetImplicitThreadDataOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetImplicitProcessDataOffset (
            [out]  unsigned __int64*  Offset
        );

        HRESULT SetImplicitProcessDataOffset (
            [in]  unsigned __int64  Offset
        );

        HRESULT GetEventSystem (
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentSystemId (
            [out]  unsigned long*  Id
        );

        HRESULT SetCurrentSystemId (
            [in]  unsigned long  Id
        );

        HRESULT GetNumberSystems (
            [out]  unsigned long*  Number
        );

        HRESULT GetSystemIdsByIndex (
            [in]  unsigned long  Start,
            [in]  unsigned long  Count,
            [out]  unsigned long*  Ids
        );

        HRESULT GetTotalNumberThreadsAndProcesses (
            [out]  unsigned long*  TotalThreads,
            [out]  unsigned long*  TotalProcesses,
            [out]  unsigned long*  LargestProcessThreads,
            [out]  unsigned long*  LargestSystemThreads,
            [out]  unsigned long*  LargestSystemProcesses
        );

        HRESULT GetCurrentSystemServer (
            [out]  unsigned __int64*  Server
        );

        HRESULT GetSystemByServer (
            [in]  unsigned __int64  Server,
            [out]  unsigned long*  Id
        );

        HRESULT GetCurrentSystemServerName (
            [out]  char*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

        HRESULT GetCurrentProcessExecutableNameWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  ExeSize
        );

        HRESULT GetCurrentSystemServerNameWide (
            [out]  wchar_t*  Buffer,
            [in]  unsigned long  BufferSize,
            [out]  unsigned long*  NameSize
        );

    };

};
